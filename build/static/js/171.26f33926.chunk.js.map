{"version":3,"sources":["views/appia/claimedRewards/store/action/index.js","views/appia/claimedRewards/list/columns.js","views/appia/claimedRewards/list/Table.js","views/appia/claimedRewards/list/index.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js"],"names":["getAllData","dispatch","a","apiRequest","url","method","response","data","success","type","console","log","error","swal","getFilteredData","claimedRewards","params","q","perPage","page","role","category","queryLowered","toLowerCase","filteredData","filter","claimed","user_id","includes","names","email","username","phone","toString","paginateArray","totalPages","length","getClaim","id","find","i","selectedClaim","getUserClaimHistory","reward_id","getFilteredUserClaims","claims","claim","renderClient","row","color","Math","floor","random","avatar","className","img","width","height","content","initials","columns","name","minWidth","selector","sortable","cell","to","onClick","store","getState","appiaClaimedRewards","allData","moment","created_at","format","ClaimedTable","useDispatch","useSelector","state","useState","searchTerm","setSearchTerm","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","setUserData","useEffect","isUserLoggedIn","JSON","parse","localStorage","getItem","item","Card","CardHeader","CardTitle","tag","CardBody","Row","Col","md","Label","for","Input","value","placeholder","onChange","e","val","target","sm","CustomInput","parseInt","currentTarget","style","padding","backgroundPosition","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","count","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","slice","dataToRender","ClaimedLIst","Table","propTypes","tagPropType","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/171.26f33926.chunk.js","sourcesContent":["import { paginateArray, sortCompare, apiRequest, swal } from '@utils'\nimport { data } from 'jquery'\n\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({ url: '/admin/rewards/claims', method: 'POST' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_ALL_CLAIMED_REWARDS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n\n  }\n}\n\n// ** Get filtered data on page or row change\nexport const getFilteredData = (claimedRewards, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, role = null, category = null } = params\n\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = claimedRewards.filter(\n      claimed =>\n        (claimed.user_id.toLowerCase().includes(queryLowered) || claimed.names.toLowerCase().includes(queryLowered) || claimed.email.toLowerCase().includes(queryLowered) || claimed.username.toLowerCase().includes(queryLowered) || claimed.phone.toString().toLowerCase().includes(queryLowered))\n    )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_CLAIMED_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\nexport const getClaim = (claimedRewards, id) => {\n  return async dispatch => {\n    const claimed = claimedRewards.find(i => i.id === id)\n    dispatch({\n      type: 'GET_CLAIM',\n      selectedClaim: claimed\n    })\n  }\n}\n\nexport const getUserClaimHistory = (reward_id) => {\n  return async dispatch => {\n    const response = await apiRequest({ url: `/admin/rewards/claims/${reward_id}`, method: 'GET' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_USER_CLAIM_HISTORYS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Something went wrong with your network.', 'error')\n    }\n\n  }\n}\n\nexport const getFilteredUserClaims = (claims, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1 } = params\n    /* eslint-enable */\n\n    const queryLowered = q?.toLowerCase()\n    const filteredData = claims?.filter(\n      claim => (claim?.names?.toLowerCase()?.includes(queryLowered) || claim?.email?.toLowerCase()?.includes(queryLowered) || claim?.username?.toLowerCase()?.includes(queryLowered)) || claim?.user_id?.toLowerCase()?.includes(queryLowered))\n    /* eslint-enable  */\n    await dispatch({\n      type: 'GET_USER_CLAIM',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData?.length,\n      params\n    })\n  }\n}\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { getClaim } from '../store/action'\nimport moment from 'moment'\nimport { store } from '@store/storeConfig/store'\n\n// ** Third Party Components\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { Slack, User, Settings, Database, Edit, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\n\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar) {\n    return <Avatar className='mr-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return <Avatar color={color || 'primary'} className='mr-1' content={`${row.names}` || 'John Doe'} initials />\n  }\n}\n\nexport const columns = [\n  {\n    name: 'User',\n    minWidth: '230px',\n    selector: 'names',\n    sortable: true,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <Link\n            to={`/appia/claimedRewards/view/${row.id}`}\n            className='user-name text-truncate mb-0'\n            onClick={() => store.dispatch(getClaim(store.getState().appiaClaimedRewards.allData, row.id))}\n          >\n            <span className='font-weight-bold'>{row.names}</span>\n          </Link>\n            <small className='text-truncate text-muted mb-0'>{row.user_id}</small>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'Email',\n    minWidth: '200px',\n    selector: 'email',\n    sortable: true,\n    cell: row => row.email\n  },\n  {\n    name: 'User Name',\n    minWidth: '140px',\n    selector: 'username',\n    sortable: true,\n    cell: row => row.username\n  },\n  {\n    name: 'Phone',\n    minWidth: '140px',\n    selector: 'phone',\n    sortable: true,\n    cell: row => row.phone\n  },\n  {\n    name: 'Date',\n    minWidth: '200px',\n    selector: 'created_at',\n    sortable: true,\n    cell: row => moment(row.created_at).format('lll')\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Columns\nimport { columns } from './columns'\n\n\n// ** Store & Actions\nimport { getAllData, getFilteredData } from '../store/action'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { selectThemeColors, isUserLoggedIn } from '@utils'\nimport { Card, CardHeader, CardTitle, CardBody, Input, Row, Col, Label, CustomInput, Button } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\nconst ClaimedTable = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.appiaClaimedRewards)\n\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [userData, setUserData] = useState(null)\n\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: searchTerm\n      })\n    )\n  }, [dispatch])\n\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getFilteredData(store.allData, {\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        q: searchTerm\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: value,\n        q: searchTerm\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: val\n      })\n    )\n  }\n\n  const filteredData = store.allData.filter(\n    item => (item.user_id.toLowerCase() || item.names.toLowerCase() || item.email.toLowerCase() || item.username.toLowerCase() || item.phone.toString().toLowerCase())\n  )\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Math.ceil(filteredData.length / rowsPerPage)\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\n      />\n    )\n  }\n\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Search Filter</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md=\"4\" className=\"d-flex\">\n              <Label className='mb-0 mt-1' for='search-invoice'>\n                Search:\n            </Label>\n              <Input\n                id='search-invoice'\n                className='ml-50 w-100'\n                type='text'\n                value={searchTerm}\n                placeholder='User and Transaction Id Search'\n                onChange={e => handleFilter(e.target.value)}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n      <Card>\n        <Row className='mx-0 mt-3 mb-0'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='rows-per-page'>Show</Label>\n              <CustomInput\n                className='form-control mx-50'\n                type='select'\n                id='rows-per-page'\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{\n                  width: '10rem',\n                  padding: '0 0.8rem',\n                  backgroundPosition: 'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n                }}\n              >\n                <option value='10'>10</option>\n                <option value='25'>25</option>\n                <option value='50'>50</option>\n              </CustomInput>\n              <Label for='rows-per-page'>Entries</Label>\n            </div>\n          </Col>\n        </Row>\n        <DataTable\n          className='table-hover-animation'\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          sortIcon={<ChevronDown />}\n          className='react-dataTable'\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default ClaimedTable\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ClaimedLIst = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default ClaimedLIst\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;"],"sourceRoot":""}