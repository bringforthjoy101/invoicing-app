{"version":3,"sources":["views/appia/transfers/store/action/index.js","views/appia/transfers/view/ApproveTransfer.js","views/appia/transfers/view/PlanCard.js","views/appia/transfers/view/TransferInfoCard.js","views/appia/transfers/view/index.js"],"names":["getAllData","dispatch","a","apiRequest","url","method","response","data","success","type","console","log","error","swal","getFilteredData","transfers","params","q","perPage","page","status","queryLowered","toLowerCase","filteredData","filter","transfer","receiver_name","includes","bank","paginateArray","totalPages","length","getTransfer","id","find","i","selectedTransfer","TransferApproval","trans_id","body","JSON","stringify","message","ApproveTransferSchema","Yup","shape","required","ApproveTransfer","useDispatch","useState","formModal","setFormModal","Button","Ripple","className","color","outline","block","onClick","Modal","isOpen","toggle","ModalHeader","initialValues","validationSchema","onSubmit","values","setSubmitting","errors","touched","isSubmitting","ModalBody","FormGroup","htmlFor","name","placeholder","component","ModalFooter","disabled","Spinner","size","PlanCard","Card","CardHeader","CardBody","TransferInfo","Row","Col","xl","lg","CardText","tag","user_id","account_number","sender_name","receiver_id","trans_type","trans_amount","toLocaleString","style","currency","bank_code","tracking_id","remarks","moment","trans_date","format","FeedbackView","props","store","useSelector","state","appiaTransfers","useParams","undefined","md","Alert","to"],"mappings":"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","file":"static/js/216.70d92780.chunk.js","sourcesContent":["import axios from 'axios'\nimport { paginateArray, sortCompare, apiRequest, swal } from '@utils'\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({ url: '/admin/transfers', method: 'GET' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_ALL_TRANSFERS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n\n  }\n}\n\n// ** Get filtered data on page or row change\nexport const getFilteredData = (transfers, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, status = null} = params\n\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = transfers.filter(\n      transfer =>\n        (transfer.receiver_name.toLowerCase().includes(queryLowered) || transfer.bank.toLowerCase().includes(queryLowered)) &&\n        transfer.status === (status || transfer.status)\n    )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\nexport const getTransfer = (transfers, id) => {\n  return async dispatch => {\n    const transfer = transfers.find(i => i.id === id)\n    dispatch({\n      type: 'GET_TRANSFER',\n      selectedTransfer: transfer\n    })\n  }\n}\n\nexport const TransferApproval = ({trans_id}) => {\n  return async dispatch => {\n    const body = JSON.stringify({trans_id})\n    const response = await apiRequest({url:`/admin/transfer/approve`, method:'POST', body}, dispatch)\n    if (response && response.data.success) {\n      swal('Good!', `${response.data.message}`, 'success')\n    } else {\n      console.log(response)\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n  }\n}","import { useState } from 'react'\nimport { Button, Spinner, Modal, ModalHeader, ModalBody, ModalFooter, Label, FormGroup, Input } from 'reactstrap'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as Yup from 'yup'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { TransferApproval } from '../store/action'\n\nconst ApproveTransferSchema = Yup.object().shape({\n  trans_id: Yup.string().required(\"required\")\n})\n\nconst ApproveTransfer = ({ trans_id }) => {\n  const dispatch = useDispatch()\n  const [formModal, setFormModal] = useState(false)\n\n\n  return (\n    <div>\n      <Button.Ripple className='text-center mb-1' color='primary' outline block onClick={() => setFormModal(!formModal)}>\n      Approve Transfer\n      </Button.Ripple>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n        <ModalHeader toggle={() => setFormModal(!formModal)}>Approve Transfer</ModalHeader>\n        <Formik\n          initialValues={{\n            trans_id\n          }}\n          validationSchema={ApproveTransferSchema}\n          onSubmit={async (values, { setSubmitting }) => {\n            await dispatch(TransferApproval(values))\n            setSubmitting(false)\n            setFormModal(!formModal)\n          }}\n        >\n\n          {({ errors, touched, isSubmitting }) => (\n            <Form>\n              <ModalBody>\n                <FormGroup>\n                  <label htmlFor='trans_id'>Transaction Id</label>\n                  <Field\n                    type='text'\n                    name='trans_id'\n                    placeholder='trans_id'\n                    className={`form-control ${errors.trans_id && touched.trans_id && 'is-invalid'}`}\n                  />\n                  <ErrorMessage name='trans_id' component='div' className='field-error text-danger' />\n                </FormGroup>\n              </ModalBody>\n              <ModalFooter>\n                <Button.Ripple color='primary' type='submit' disabled={isSubmitting}>\n                  {isSubmitting && <Spinner color='white' size='sm' />}\n                  <span className='ml-50'>Approve</span>\n                </Button.Ripple>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ApproveTransfer\n","import { useState } from 'react'\n// ** Reactstrap\nimport { Card, CardHeader, CardBody, Badge, UncontrolledTooltip, Button } from 'reactstrap'\nimport ApproveTransfer from './ApproveTransfer'\n\nconst PlanCard = ({ selectedTransfer }) => {\n        \n\n  return (\n    <Card className='plan-card border-primary'>\n      <CardHeader className='d-flex justify-content-between align-items-center pt-75 pb-1'>\n        <h5 className='mb-0'>Actions</h5>\n      </CardHeader>\n      <CardBody>\n        <ApproveTransfer trans_id={selectedTransfer.trans_id} />\n      </CardBody>\n    </Card>\n  ) \n}\n\nexport default PlanCard\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport moment from 'moment'\n\n// ** Third Party Components\nimport { Card, CardBody, CardText, Button, Row, Col } from 'reactstrap'\nimport { DollarSign, TrendingUp, User, Check, Star, Flag, Phone, BarChart, Key, Unlock, X, Layers, Clock, Pocket, Award, Camera, Type, Hash, Calendar } from 'react-feather'\n\n\nconst TransferInfo = ({ selectedTransfer }) => {\n  // ** render user img\n\n  return (\n    <Card>\n      <CardBody>\n        <Row>\n          <Col xl='6' lg='12' className='mt-2 mt-xl-0'>\n            <div className='user-info-wrapper'>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Unlock />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    User Id\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.user_id}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Hash />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Account Number\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.account_number}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <User />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Sender\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.sender_name}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Unlock />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Receiver Id\n                  </CardText>\n                </div>\n        \n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.receiver_id !== null ? selectedTransfer.receiver_id : \"No receiver Id\"}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <User />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Receiver\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.receiver_name}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Unlock />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Transaction Id\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.trans_id}\n                </CardText>\n              </div>\n            <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Type />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Transaction Type\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.trans_type}\n                </CardText>\n              </div>\n            </div>\n          </Col>\n          <Col xl='6' lg='12' className='mt-2 mt-xl-0'>\n            <div className='user-info-wrapper'>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Hash />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Transaction Amount\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.trans_amount.toLocaleString('en-US', { style: 'currency', currency: 'NGN' })}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Pocket className='text-secoundary' />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Bank\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.bank}\n                </CardText>\n              </div>\n            <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Pocket className='text-secoundary' />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Bank Code\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.bank_code !== null ? selectedTransfer.bank_code : \"No Code\"}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-secoundary'>\n                    <Key className='text-secoundary' />\n                  </div>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Tracking Id\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.tracking_id !== null ? selectedTransfer.tracking_id : \"No Tracking Id\" }\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  {selectedTransfer.status === 'Successful' ? <div className='color-box bg-light-secoundary'>\n                    <Check className='text-secoundary' />\n                  </div> : <div className='color-box bg-light-secoundary'>\n                    <X className='text-secoundary' />\n                  </div>}\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Transaction Status\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.status}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Pocket className='text-secoundary' />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Remarks\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.remarks}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-secoundary'>\n                    <Calendar className='text-secoundary' />\n                  </div>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Transaction Date\n                  </CardText>\n                </div>\n                <CardText>\n                  {moment(selectedTransfer?.trans_date).format('lll')}\n                </CardText>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TransferInfo\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport moment from 'moment'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport PlanCard from './PlanCard'\nimport TransferInfo from './TransferInfoCard'\n// import InvoiceList from '../../invoice/list'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst FeedbackView = props => {\n  // ** Vars\n  const store = useSelector(state => state.appiaTransfers),\n    { id } = useParams()\n\n  return store.selectedTransfer !== null && store.selectedTransfer !== undefined ? (\n    <div className='app-user-view'>\n      <Row>\n        <Col xl='12' lg='12' md='12'>\n          <TransferInfo selectedTransfer={store.selectedTransfer} />\n        </Col>\n      </Row>\n      {store.selectedTransfer.status === 'Pending' ?  <Row>\n        <Col xl='3' lg='4' md='5'>\n          <PlanCard selectedTransfer={store.selectedTransfer} />\n        </Col>\n      </Row> : \"\"}\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Users not found</h4>\n      <div className='alert-body'>\n        Users with id: {id} doesn't exist. Check list of all Users: <Link to='/app/user/list'>Users List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default FeedbackView\n"],"sourceRoot":""}