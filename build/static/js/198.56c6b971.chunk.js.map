{"version":3,"sources":["views/appia/transfers/view/ApproveTransfer.js","views/appia/transfers/view/PlanCard.js","views/appia/transfers/view/TransferInfoCard.js","views/appia/transfers/view/index.js","views/appia/transfers/store/action/index.js"],"names":["ApproveTransferSchema","Yup","shape","trans_id","required","ApproveTransfer","dispatch","useDispatch","useState","formModal","setFormModal","Button","Ripple","className","color","outline","block","onClick","Modal","isOpen","toggle","ModalHeader","initialValues","validationSchema","onSubmit","values","a","setSubmitting","TransferApproval","errors","touched","isSubmitting","ModalBody","FormGroup","htmlFor","type","name","placeholder","component","ModalFooter","disabled","Spinner","size","PlanCard","selectedTransfer","Card","CardHeader","CardBody","TransferInfo","Row","Col","xl","lg","CardText","tag","user_id","account_number","sender_name","receiver_id","receiver_name","trans_type","trans_amount","toLocaleString","style","currency","bank","bank_code","tracking_id","status","remarks","moment","trans_date","format","FeedbackView","props","store","useSelector","state","appiaTransfers","id","useParams","undefined","md","Alert","to","getAllData","apiRequest","url","method","response","data","success","console","log","error","swal","getFilteredData","transfers","params","q","perPage","page","queryLowered","toLowerCase","filteredData","filter","transfer","includes","paginateArray","totalPages","length","getTransfer","find","i","body","JSON","stringify","message"],"mappings":"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","file":"static/js/198.56c6b971.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { Button, Spinner, Modal, ModalHeader, ModalBody, ModalFooter, Label, FormGroup, Input } from 'reactstrap'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as Yup from 'yup'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { TransferApproval } from '../store/action'\n\nconst ApproveTransferSchema = Yup.object().shape({\n  trans_id: Yup.string().required(\"required\")\n})\n\nconst ApproveTransfer = ({ trans_id }) => {\n  const dispatch = useDispatch()\n  const [formModal, setFormModal] = useState(false)\n\n\n  return (\n    <div>\n      <Button.Ripple className='text-center mb-1' color='primary' outline block onClick={() => setFormModal(!formModal)}>\n      Approve Transfer\n      </Button.Ripple>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n        <ModalHeader toggle={() => setFormModal(!formModal)}>Approve Transfer</ModalHeader>\n        <Formik\n          initialValues={{\n            trans_id\n          }}\n          validationSchema={ApproveTransferSchema}\n          onSubmit={async (values, { setSubmitting }) => {\n            await dispatch(TransferApproval(values))\n            setSubmitting(false)\n            setFormModal(!formModal)\n          }}\n        >\n\n          {({ errors, touched, isSubmitting }) => (\n            <Form>\n              <ModalBody>\n                <FormGroup>\n                  <label htmlFor='trans_id'>Transaction Id</label>\n                  <Field\n                    type='text'\n                    name='trans_id'\n                    placeholder='trans_id'\n                    className={`form-control ${errors.trans_id && touched.trans_id && 'is-invalid'}`}\n                  />\n                  <ErrorMessage name='trans_id' component='div' className='field-error text-danger' />\n                </FormGroup>\n              </ModalBody>\n              <ModalFooter>\n                <Button.Ripple color='primary' type='submit' disabled={isSubmitting}>\n                  {isSubmitting && <Spinner color='white' size='sm' />}\n                  <span className='ml-50'>Approve</span>\n                </Button.Ripple>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ApproveTransfer\n","import { useState } from 'react'\n// ** Reactstrap\nimport { Card, CardHeader, CardBody, Badge, UncontrolledTooltip, Button } from 'reactstrap'\nimport ApproveTransfer from './ApproveTransfer'\n\nconst PlanCard = ({ selectedTransfer }) => {\n        \n\n  return (\n    <Card className='plan-card border-primary'>\n      <CardHeader className='d-flex justify-content-between align-items-center pt-75 pb-1'>\n        <h5 className='mb-0'>Actions</h5>\n      </CardHeader>\n      <CardBody>\n        <ApproveTransfer trans_id={selectedTransfer.trans_id} />\n      </CardBody>\n    </Card>\n  ) \n}\n\nexport default PlanCard\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport moment from 'moment'\n\n// ** Third Party Components\nimport { Card, CardBody, CardText, Button, Row, Col } from 'reactstrap'\nimport { DollarSign, TrendingUp, User, Check, Star, Flag, Phone, BarChart, Key, Unlock, X, Layers, Clock, Pocket, Award, Camera, Type, Hash, Calendar } from 'react-feather'\n\n\nconst TransferInfo = ({ selectedTransfer }) => {\n  // ** render user img\n\n  return (\n    <Card>\n      <CardBody>\n        <Row>\n          <Col xl='6' lg='12' className='mt-2 mt-xl-0'>\n            <div className='user-info-wrapper'>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Unlock />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    User Id\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.user_id}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Hash />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Account Number\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.account_number}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <User />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Sender\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.sender_name}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Unlock />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Receiver Id\n                  </CardText>\n                </div>\n        \n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.receiver_id !== null ? selectedTransfer.receiver_id : \"No receiver Id\"}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <User />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Receiver\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.receiver_name}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Unlock />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Transaction Id\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.trans_id}\n                </CardText>\n              </div>\n            <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Type />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Transaction Type\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.trans_type}\n                </CardText>\n              </div>\n            </div>\n          </Col>\n          <Col xl='6' lg='12' className='mt-2 mt-xl-0'>\n            <div className='user-info-wrapper'>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Hash />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Transaction Amount\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.trans_amount.toLocaleString('en-US', { style: 'currency', currency: 'NGN' })}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Pocket className='text-secoundary' />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Bank\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.bank}\n                </CardText>\n              </div>\n            <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Pocket className='text-secoundary' />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Bank Code\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.bank_code !== null ? selectedTransfer.bank_code : \"No Code\"}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-secoundary'>\n                    <Key className='text-secoundary' />\n                  </div>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Tracking Id\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.tracking_id !== null ? selectedTransfer.tracking_id : \"No Tracking Id\" }\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  {selectedTransfer.status === 'Successful' ? <div className='color-box bg-light-secoundary'>\n                    <Check className='text-secoundary' />\n                  </div> : <div className='color-box bg-light-secoundary'>\n                    <X className='text-secoundary' />\n                  </div>}\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Transaction Status\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer.status}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='color-box bg-light-secoundary'>\n                  <Pocket className='text-secoundary' />\n                </div>\n                <div className='d-flex align-items-center'>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Remarks\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedTransfer?.remarks}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-secoundary'>\n                    <Calendar className='text-secoundary' />\n                  </div>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Transaction Date\n                  </CardText>\n                </div>\n                <CardText>\n                  {moment(selectedTransfer?.trans_date).format('lll')}\n                </CardText>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TransferInfo\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport moment from 'moment'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport PlanCard from './PlanCard'\nimport TransferInfo from './TransferInfoCard'\n// import InvoiceList from '../../invoice/list'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst FeedbackView = props => {\n  // ** Vars\n  const store = useSelector(state => state.appiaTransfers),\n    { id } = useParams()\n\n  return store.selectedTransfer !== null && store.selectedTransfer !== undefined ? (\n    <div className='app-user-view'>\n      <Row>\n        <Col xl='12' lg='12' md='12'>\n          <TransferInfo selectedTransfer={store.selectedTransfer} />\n        </Col>\n      </Row>\n      {store.selectedTransfer.status === 'Pending' ?  <Row>\n        <Col xl='3' lg='4' md='5'>\n          <PlanCard selectedTransfer={store.selectedTransfer} />\n        </Col>\n      </Row> : \"\"}\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Users not found</h4>\n      <div className='alert-body'>\n        Users with id: {id} doesn't exist. Check list of all Users: <Link to='/app/user/list'>Users List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default FeedbackView\n","import axios from 'axios'\nimport { paginateArray, sortCompare, apiRequest, swal } from '@utils'\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({ url: '/admin/transfers', method: 'GET' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_ALL_TRANSFERS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n\n  }\n}\n\n// ** Get filtered data on page or row change\nexport const getFilteredData = (transfers, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, status = null} = params\n\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = transfers.filter(\n      transfer =>\n        (transfer.receiver_name.toLowerCase().includes(queryLowered) || transfer.bank.toLowerCase().includes(queryLowered)) &&\n        transfer.status === (status || transfer.status)\n    )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\nexport const getTransfer = (transfers, id) => {\n  return async dispatch => {\n    const transfer = transfers.find(i => i.id === id)\n    dispatch({\n      type: 'GET_TRANSFER',\n      selectedTransfer: transfer\n    })\n  }\n}\n\nexport const TransferApproval = ({trans_id}) => {\n  return async dispatch => {\n    const body = JSON.stringify({trans_id})\n    const response = await apiRequest({url:`/admin/transfer/approve`, method:'POST', body}, dispatch)\n    if (response && response.data.success) {\n      swal('Good!', `${response.data.message}`, 'success')\n    } else {\n      console.log(response)\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n  }\n}"],"sourceRoot":""}