{"version":3,"sources":["@core/components/widgets/stats/TinyChartStats.js","@core/components/widgets/stats/ChartOptions.js","views/ui-elements/cards/statistics/SubscribersGained.js","views/ui-elements/cards/statistics/StatsCard.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js","views/ui-elements/cards/statistics/RevenueGenerated.js","views/ui-elements/cards/statistics/QuaterlySales.js","views/ui-elements/cards/statistics/OrdersReceived.js","@core/components/widgets/stats/StatsWithLineChart.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","views/ui-elements/cards/statistics/Newsletter.js","@core/components/widgets/stats/StatsVertical.js","@core/components/widgets/stats/StatsHorizontal.js","views/ui-elements/cards/statistics/index.js","@core/components/breadcrumbs/index.js","@core/components/widgets/stats/StatsWithAreaChart.js"],"names":["TinyChartStats","props","title","stats","options","series","type","height","className","defaultProps","areaChartOptions","chart","toolbar","show","sparkline","enabled","grid","colors","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","lineChartOptions","dropShadow","top","left","blur","opacity","gradientToColors","SubscribersGained","kFormatter","dashData","useState","data","setData","useEffect","axios","get","then","res","icon","size","color","subscribers","registered_subscribers","statTitle","StatsCard","cols","subtitle","tag","map","item","index","margin","Object","keys","classnames","length","body","OrdersBarChart","warning","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","startingShape","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","ProfitLineChart","info","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize","RevenueGenerated","success","id","StatsWithAreaChart","analyticsData","revenue","QuarterlySales","danger","sales","OrdersReceived","orders","StatsWithLineChart","rest","Card","CardHeader","CardText","SiteTraffic","ActiveUsers","Newsletter","StatsVertical","CardBody","StatsHorizontal","StatisticsCards","context","useContext","ThemeColors","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","lg","xs","main","sm","md","xl","QuaterlySales","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","to","active","Link"],"mappings":"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","file":"static/js/162.c8d17e1f.chunk.js","sourcesContent":["// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\nimport { Card, CardBody } from 'reactstrap'\n\nconst TinyChartStats = props => {\n  // ** Props\n  const { title, stats, options, series, type, height } = props\n\n  return (\n    <Card className='card-tiny-line-stats'>\n      <CardBody className='pb-50'>\n        <h6>{title}</h6>\n        <h2 className='font-weight-bolder mb-1'>{stats}</h2>\n        <Chart options={options} series={series} type={type} height={height} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TinyChartStats\n\n// ** PropTypes\nTinyChartStats.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  series: PropTypes.array.isRequired,\n  type: PropTypes.string.isRequired\n}\n\n// ** Default Props\nTinyChartStats.defaultProps = {\n  height: 100\n}\n","// ** Area Chart Common Options\nexport const areaChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2.5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.7,\n      opacityTo: 0.5,\n      stops: [0, 80, 100]\n    }\n  },\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n\n// ** Line Chart Common Options\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    },\n    dropShadow: {\n      enabled: true,\n      top: 5,\n      left: 0,\n      blur: 4,\n      opacity: 0.1\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      gradientToColors: ['#A9A2F6'],\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Users } from 'react-feather'\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst SubscribersGained = ({ kFormatter, dashData}) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Users size={21} />}\n      color='primary'\n      stats={kFormatter(dashData?.subscribers?.registered_subscribers)}\n      statTitle='Subscribers Gained'\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\n\nexport default SubscribersGained\n","import classnames from 'classnames'\nimport Avatar from '@components/avatar'\nimport { TrendingUp, User, Box, DollarSign } from 'react-feather'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Media } from 'reactstrap'\n\nconst StatsCard = ({ cols }) => {\n  const data = [\n    {\n      title: '230k',\n      subtitle: 'Sales',\n      color: 'light-primary',\n      icon: <TrendingUp size={24} />\n    },\n    {\n      title: '8.549k',\n      subtitle: 'Customers',\n      color: 'light-info',\n      icon: <User size={24} />\n    },\n    {\n      title: '1.423k',\n      subtitle: 'Products',\n      color: 'light-danger',\n      icon: <Box size={24} />\n    },\n    {\n      title: '$9745',\n      subtitle: 'Revenue',\n      color: 'light-success',\n      icon: <DollarSign size={24} />\n    }\n  ]\n\n  const renderData = () => {\n    return data.map((item, index) => {\n      const margin = Object.keys(cols)\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2 mb-${margin[0]}-0`]: index !== data.length - 1\n          })}\n        >\n          <Media>\n            <Avatar color={item.color} icon={item.icon} className='mr-2' />\n            <Media className='my-auto' body>\n              <h4 className='font-weight-bolder mb-0'>{item.title}</h4>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </Media>\n          </Media>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Statistics</CardTitle>\n        <CardText className='card-text font-small-2 mr-25 mb-0'>Updated 1 month ago</CardText>\n      </CardHeader>\n      <CardBody className='statistics-body'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        startingShape: 'rounded',\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { CreditCard } from 'react-feather'\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst RevenueGenerated = ({ kFormatter, success }) => {\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<CreditCard size={21} />}\n      color='success'\n      stats={kFormatter(data.analyticsData.revenue)}\n      statTitle='Revenue Generated'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default RevenueGenerated\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { ShoppingCart } from 'react-feather'\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst QuarterlySales = ({ danger }) => {\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<ShoppingCart size={21} />}\n      color='danger'\n      stats={data.analyticsData.sales}\n      statTitle='Quarterly Sales'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default QuarterlySales\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Package } from 'react-feather'\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst OrdersReceived = ({ kFormatter, warning }) => {\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Package size={21} />}\n      color='warning'\n      stats={kFormatter(data.analyticsData.orders)}\n      statTitle='Orders Received'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default OrdersReceived\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\nimport { Card, CardHeader, CardText } from 'reactstrap'\n\n// ** Default Options\nimport { lineChartOptions } from './ChartOptions'\n\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\n  return (\n    <Card {...rest}>\n      <CardHeader className='align-items-start pb-0'>\n        <div>\n          <h2 className='font-weight-bolder'>{stats}</h2>\n          <CardText>{statTitle}</CardText>\n        </div>\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n      </CardHeader>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithLineChart\n\n// ** PropTypes\nStatsWithLineChart.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  options: PropTypes.object,\n  series: PropTypes.array.isRequired,\n  type: PropTypes.string,\n  height: PropTypes.string\n}\n\n// ** Default Props\nStatsWithLineChart.defaultProps = {\n  options: lineChartOptions,\n  color: 'primary'\n}\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Monitor } from 'react-feather'\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst SiteTraffic = () => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Monitor size={21} />}\n      color='primary'\n      stats='78.9k'\n      statTitle='Site Traffic'\n      series={data.series}\n      type='line'\n    />\n  ) : null\n}\n\nexport default SiteTraffic\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { UserCheck } from 'react-feather'\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst ActiveUsers = ({ success }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'activeUsers',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#55DD92'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<UserCheck size={21} />}\n      color='success'\n      stats='659.8k'\n      statTitle='Active Users'\n      series={data.series}\n      options={options}\n      type='line'\n    />\n  ) : null\n}\n\nexport default ActiveUsers\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Mail } from 'react-feather'\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst Newsletter = ({ warning }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'newsletter',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#ffc085'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Mail size={21} />}\n      color='warning'\n      stats='28.7k'\n      statTitle='Newsletter'\n      series={data.series}\n      type='line'\n      options={options}\n    />\n  ) : null\n}\n\nexport default Newsletter\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className, ...rest }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='font-weight-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  className: PropTypes.string\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, statTitle, className, ...rest }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            <h2 className='font-weight-bolder mb-0'>{stats}</h2>\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  className: PropTypes.string\n}\n","import { Fragment, useContext } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { kFormatter } from '@utils'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport StatsCard from './StatsCard'\nimport OrdersBarChart from './OrdersBarChart'\nimport ProfitLineChart from './ProfitLineChart'\nimport SubscribersGained from './SubscribersGained'\nimport RevenueGenerated from './RevenueGenerated'\nimport QuaterlySales from './QuaterlySales'\nimport OrdersReceived from './OrdersReceived'\nimport SiteTraffic from './SiteTraffic'\nimport ActiveUsers from './ActiveUsers'\nimport Newsletter from './Newsletter'\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\nimport {\n  Eye,\n  MessageSquare,\n  ShoppingBag,\n  Heart,\n  Award,\n  Truck,\n  Cpu,\n  Server,\n  Activity,\n  AlertOctagon\n} from 'react-feather'\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\nconst StatisticsCards = () => {\n  const context = useContext(ThemeColors)\n\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Statistics Cards' breadCrumbParent='Card' breadCrumbActive='Statistics Cards' />\n\n      <Row>\n        {/* Orders Bar Chart */}\n        <Col lg='2' xs='6'>\n          <OrdersBarChart warning={context.colors.warning.main} />\n        </Col>\n        {/* Orders Bar Chart */}\n\n        {/* Profit Line Chart */}\n        <Col lg='2' xs='6'>\n          <ProfitLineChart info={context.colors.info.main} />\n        </Col>\n        {/* Profit Line Chart */}\n\n        {/* Stats Card */}\n        <Col lg='8' sm='12'>\n          <StatsCard cols={{ md: '3', sm: '6' }} />\n        </Col>\n        {/* Stats Card */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons */}\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\n        </Col>\n        {/* Stats With Icons */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons Horizontal */}\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\n        </Col>\n        {/* Stats With Icons Horizontal */}\n      </Row>\n\n      <Row>\n        {/* Stats Area Charts */}\n        <Col lg='3' sm='6'>\n          <SubscribersGained kFormatter={kFormatter} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <QuaterlySales danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Area Charts */}\n      </Row>\n\n      <Row>\n        {/* Stats Line Charts */}\n        <Col lg='4' sm='6'>\n          <SiteTraffic />\n        </Col>\n        <Col lg='4' sm='6'>\n          <ActiveUsers success={context.colors.success.main} />\n        </Col>\n        <Col lg='4' sm='6'>\n          <Newsletter warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Line Charts */}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default StatisticsCards\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\nimport { Card, CardBody } from 'reactstrap'\n\n// ** Default Options\nimport { areaChartOptions } from './ChartOptions'\n\nconst StatsWithAreaChart = props => {\n  // ** Props\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\n  return (\n    <Card {...rest}>\n      <CardBody\n        className={classnames('pb-0', {\n          [className]: className\n        })}\n      >\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n        <h2 className='font-weight-bolder mt-1'>{stats}</h2>\n        <p className='card-text'>{statTitle}</p>\n      </CardBody>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithAreaChart\n\n// ** PropTypes\nStatsWithAreaChart.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  // stats: PropTypes.number.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  options: PropTypes.object,\n  series: PropTypes.array.isRequired,\n  type: PropTypes.string,\n  height: PropTypes.string,\n  className: PropTypes.string\n}\n\n// ** Default Props\nStatsWithAreaChart.defaultProps = {\n  options: areaChartOptions,\n  color: 'primary'\n}\n"],"sourceRoot":""}