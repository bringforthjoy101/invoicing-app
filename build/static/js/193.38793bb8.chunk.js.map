{"version":3,"sources":["views/ui-elements/icons/index.js","@core/components/breadcrumbs/index.js"],"names":["ToastContent","icon","className","size","color","role","aria-label","FeatherIcons","IconsArr","useState","query","setQuery","filteredArr","setFilteredArr","active","setActive","key","Icons","push","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","tag","FormGroup","addonType","placeholder","onChange","e","val","arr","length","filter","toLowerCase","includes","handleFilter","target","value","id","dataToRender","map","IconTag","text","classnames","onClick","toast","success","hideProgressBar","handleIconCardClick","placement","replace","trim","renderIcons","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","to","right","Link"],"mappings":"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","file":"static/js/193.38793bb8.chunk.js","sourcesContent":["import { Fragment, useState } from 'react'\nimport classnames from 'classnames'\nimport { toast } from 'react-toastify'\nimport * as Icons from 'react-feather'\nimport Avatar from '@components/avatar'\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col,\n  Input,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  UncontrolledTooltip\n} from 'reactstrap'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport '@styles/base/pages/ui-feather.scss'\n\nconst ToastContent = ({ icon }) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Icons.Check size={12} />} />\n        <h6 className='toast-title'>Icon Name Copied! ðŸ“‹</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {icon}\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst FeatherIcons = () => {\n  const IconsArr = [],\n    [query, setQuery] = useState([]),\n    [filteredArr, setFilteredArr] = useState([]),\n    [active, setActive] = useState(null)\n\n  for (const key in Icons) {\n    IconsArr.push(key)\n  }\n\n  const handleFilter = val => {\n    const arr = []\n    if (val.length) {\n      IconsArr.filter(icon => {\n        if (icon.toLowerCase().includes(val.toLowerCase())) {\n          arr.push(icon)\n        }\n      })\n    }\n    setFilteredArr([...arr])\n  }\n\n  const handleIconCardClick = icon => {\n    setActive(icon)\n    toast.success(<ToastContent icon={icon} />, { hideProgressBar: true })\n  }\n\n  const renderIcons = () => {\n    const dataToRender = query.length ? filteredArr : IconsArr\n    if (dataToRender.length) {\n      return dataToRender.map(icon => {\n        const IconTag = Icons[icon]\n        return (\n          <Fragment key={icon}>\n            <CopyToClipboard text={`<${icon} />`}>\n              <Card\n                id={icon}\n                className={classnames('icon-card cursor-pointer text-center mb-2 mx-50', {\n                  active: active === icon\n                })}\n                onClick={() => handleIconCardClick(icon)}\n              >\n                <CardBody>\n                  <div className='icon-wrapper'>\n                    <IconTag />\n                  </div>\n                  <p className='icon-name text-truncate mb-0 mt-1'>{icon}</p>\n                </CardBody>\n              </Card>\n            </CopyToClipboard>\n            <UncontrolledTooltip placement='top' target={icon}>\n              {icon.replace(/([A-Z])/g, ' $1').trim()}\n            </UncontrolledTooltip>\n          </Fragment>\n        )\n      })\n    } else {\n      return (\n        <div className='d-flex align-items-center justify-content-center w-100'>\n          <h4 className='mb-0'>No Icons Found!</h4>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Feather Icons' breadCrumbParent='UI' breadCrumbActive='Feather Icons' />\n      <Row>\n        <Col sm='12'>\n          <div className='icon-search-wrapper my-3 mx-auto'>\n            <InputGroup className='input-group-merge' tag={FormGroup}>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Icons.Search size={14} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                placeholder='Search icons...'\n                onChange={e => {\n                  handleFilter(e.target.value)\n                  setQuery(e.target.value)\n                }}\n              />\n            </InputGroup>\n          </div>\n        </Col>\n      </Row>\n      <div className='d-flex flex-wrap' id='icons-container'>\n        {renderIcons()}\n      </div>\n    </Fragment>\n  )\n}\nexport default FeatherIcons\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}