{"version":3,"sources":["views/appia/dataPlans/view/PlanCard.js","views/appia/dataPlans/view/DataPlanInfo.js","views/appia/dataPlans/view/index.js","views/appia/dataPlans/store/action/index.js"],"names":["PlanCard","selectedPlan","dispatch","useDispatch","useState","formModal","setFormModal","DeletePlanSchema","Yup","shape","data_plan_id","required","Card","className","CardHeader","CardBody","Button","Ripple","color","outline","block","onClick","Modal","isOpen","toggle","ModalHeader","initialValues","id","validationSchema","onSubmit","values","a","setSubmitting","body","JSON","stringify","apiRequest","url","method","response","data","success","swal","message","getAllData","console","error","errors","touched","isSubmitting","ModalBody","FormGroup","htmlFor","type","name","placeholder","component","ModalFooter","disabled","Spinner","size","DataPlanInfo","Row","Col","xl","lg","CardText","tag","product_id","network","price","toLocaleString","style","currency","category","allowance","validity","UserView","props","store","useSelector","state","appiaDataPlans","useParams","setUserData","useEffect","isUserLoggedIn","parse","localStorage","getItem","undefined","md","Alert","to","log","getFilteredData","dataPlans","params","q","perPage","page","role","queryLowered","toLowerCase","filteredData","filter","plan","includes","paginateArray","totalPages","length","getPlan","find","i"],"mappings":"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","file":"static/js/192.a083c60c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n// ** Reactstrap\nimport { Card, CardHeader, CardBody, Badge, UncontrolledTooltip, Button, Spinner, Modal, ModalHeader, ModalBody, ModalFooter, Label, FormGroup, Input } from 'reactstrap'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as Yup from 'yup'\nimport { store } from '@store/storeConfig/store'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getAllData } from '../store/action'\nimport { swal, apiRequest } from '@utils'\n\n\nconst PlanCard = ({ selectedPlan }) => {\n  const dispatch = useDispatch()\n\n  const [formModal, setFormModal] = useState(false)\n\n\n  const DeletePlanSchema = Yup.object().shape({\n    data_plan_id: Yup.string().required(\"required\")\n  })\n\n\n  return (\n    <Card className='plan-card border-primary'>\n      <CardHeader className='d-flex justify-content-between align-items-center pt-75 pb-1'>\n        <h5 className='mb-0'>Actions</h5>\n      </CardHeader>\n      <CardBody>\n        <Button.Ripple className='text-center mb-1' color='danger' outline block onClick={() => setFormModal(!formModal)}>\n          Delete Plan\n      </Button.Ripple>\n        <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n          <ModalHeader toggle={() => setFormModal(!formModal)}>Add Funds</ModalHeader>\n          <Formik\n            initialValues={{\n              data_plan_id: selectedPlan.id\n            }}\n            validationSchema={DeletePlanSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n              const body = JSON.stringify(values)\n              try {\n                const response = await apiRequest({ url: '/admin/rewards/data-plan/delete', method: 'POST', body }, dispatch)\n                if (response) {\n                  if (response.data.success) {\n                    swal('Great job!', response.data.message, 'success')\n                    dispatch(getAllData())\n                  } else {\n                    swal('Oops!', response.data.message, 'error')\n                  }\n                } else {\n                  swal('Oops!', 'Something went wrong with your network.', 'error')\n                }\n\n              } catch (error) {\n                console.error({ error })\n              }\n              setSubmitting(false)\n              setFormModal(!formModal)\n            }}\n          >\n\n            {({ errors, touched, isSubmitting }) => (\n              <Form>\n                <ModalBody>\n                  <FormGroup>\n                    <label htmlFor='data_plan_id'>Plan Id</label>\n                    <Field\n                      type='number'\n                      name='data_plan_id'\n                      placeholder='plan id'\n                      className={`form-control ${errors.data_plan_id && touched.data_plan_id && 'is-invalid'}`}\n                    />\n                    <ErrorMessage name='data_plan_id' component='div' className='field-error text-danger' />\n                  </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                  <Button.Ripple color='primary' type='submit' disabled={isSubmitting}>\n                    {isSubmitting && <Spinner color='white' size='sm' />}\n                    <span className='ml-50'>Delete Plan</span>\n                  </Button.Ripple>\n                </ModalFooter>\n              </Form>\n            )}\n          </Formik>\n        </Modal>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PlanCard\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Card, CardBody, CardText, Button, Row, Col } from 'reactstrap'\nimport { DollarSign, TrendingUp, User, Check, Star, Flag, Phone, BarChart, Key, Layers, Clock, Pocket } from 'react-feather'\n\nconst DataPlanInfo = ({ selectedPlan }) => {\n\n  return (\n    <Card>\n      <CardBody>\n        <Row>\n          <Col xl='6' lg='12' className='mt-2 mt-xl-0'>\n            <div className='user-info-wrapper'>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-info'>\n                    <Key className='text-info' />\n                  </div>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Product Id\n                  </CardText>\n                </div>\n                <CardText className='mb-0'>\n                  {selectedPlan.product_id}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-warning'>\n                    <BarChart className='text-warning' />\n                  </div>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Network\n                  </CardText>\n                </div>\n                <CardText className='mb-0'>\n                  {selectedPlan.network}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-secoundary'>\n                    <Pocket className='text-secoundary' />\n                  </div>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Price\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedPlan.price.toLocaleString('en-US', { style: 'currency', currency: 'NGN' })}\n                </CardText>\n              </div>\n            </div>\n          </Col>\n          <Col xl='6' lg='12' className='mt-2 mt-xl-0'>\n            <div className='user-info-wrapper'>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-primary'>\n                    <Layers className='text-primary' />\n                  </div>\n                  <CardText tag='span' className='user-info-title text-capitalize font-weight-bold mb-0 ml-1'>\n                    Category\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedPlan.category}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-secoundary'>\n                    <Pocket className='text-secoundary' />\n                  </div>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Allowance\n                  </CardText>\n                </div>\n                <CardText className='mb-0'>{selectedPlan.allowance}</CardText>\n              </div>\n              <div className='d-flex flex-wrap align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <div className='color-box bg-light-success'>\n                    <Clock className='text-success' />\n                  </div>\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0 ml-1'>\n                    Validity\n                  </CardText>\n                </div>\n                <CardText className='mb-0'>{selectedPlan.validity}</CardText>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DataPlanInfo\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport moment from 'moment'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { isUserLoggedIn } from '@utils'\n\n// ** Reactstrap\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport PlanCard from './PlanCard'\nimport DataPlanInfo from './DataPlanInfo'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UserView = props => {\n  // ** Vars\n  const store = useSelector(state => state.appiaDataPlans),\n    dispatch = useDispatch(),\n    { id } = useParams()\n\n  const [userData, setUserData] = useState(null)\n\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n  // ** Get suer on mount\n  useEffect(() => {\n    // dispatch(getPlan(store.allData, id))\n  }, [dispatch])\n\n\n  return store.selectedPlan !== null && store.selectedPlan !== undefined ? (\n    <div className='app-user-view'>\n      <Row>\n        <Col xl='9' lg='8' md='7'>\n          <DataPlanInfo selectedPlan={store.selectedPlan} />\n        </Col>\n        {/* {userData?.role_name === \"Super Admin\" ?  */}\n        <Col xl='3' lg='4' md='5'>\n          <PlanCard selectedPlan={store.selectedPlan} />\n        </Col> \n        {/* // : \"\"} */}\n      </Row>\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Users not found</h4>\n      <div className='alert-body'>\n        Users with id: {id} doesn't exist. Check list of all Users: <Link to='/app/user/list'>Users List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default UserView\n","import { paginateArray, sortCompare, apiRequest, swal } from '@utils'\nimport { data } from 'jquery'\n\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({ url: '/admin/rewards/data-plans/get', method: 'GET' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_ALL_DATA_PLANS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n\n  }\n}\n\n// ** Get filtered data on page or row change\nexport const getFilteredData = (dataPlans, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, role = null, category = null } = params\n\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = dataPlans.filter(\n      plan =>\n        (plan.network.toLowerCase().includes(queryLowered) || plan.category.toLowerCase().includes(queryLowered) || plan.validity.toLowerCase().includes(queryLowered)) &&\n        plan.category === (category || plan.category)\n    )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_DATA_PLANS',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\nexport const getPlan = (dataPlans, id) => {\n  return async dispatch => {\n    const plan = dataPlans.find(i => i.id === id)\n    dispatch({\n      type: 'GET_PLAN',\n      selectedPlan: plan\n    })\n  }\n}\n"],"sourceRoot":""}