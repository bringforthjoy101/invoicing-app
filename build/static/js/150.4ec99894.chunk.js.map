{"version":3,"sources":["views/appia/transfers/list/columns.js","views/appia/transfers/list/Table.js","views/appia/transfers/list/index.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/lib/FormGroup.js","views/appia/transfers/store/action/index.js"],"names":["renderClient","row","color","Math","floor","random","avatar","className","img","width","height","content","trans_id","initials","columns","name","minWidth","selector","sortable","cell","to","id","onClick","store","dispatch","getTransfer","getState","appiaTransfers","allData","sender_name","receiver_name","bank","trans_type","trans_amount","toLocaleString","style","currency","status","moment","trans_date","format","FeedbacksList","useDispatch","useSelector","state","useState","searchTerm","setSearchTerm","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","value","label","number","currentStatus","setCurrentStatus","useEffect","getAllData","getFilteredData","page","perPage","q","filteredData","filter","item","toLowerCase","sender_","Card","CardHeader","CardTitle","tag","CardBody","Row","Col","lg","md","Label","for","Input","type","placeholder","onChange","e","val","target","theme","selectThemeColors","isClearable","classNamePrefix","options","data","sm","CustomInput","parseInt","currentTarget","padding","backgroundPosition","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationComponent","count","ceil","length","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","slice","dataToRender","Table","propTypes","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","func","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","_interopRequireDefault","require","exports","__esModule","default","_extends2","_objectWithoutPropertiesLoose2","_react","_propTypes","_classnames","_utils","children","node","bool","check","inline","disabled","FormGroup","_default","a","apiRequest","url","method","response","success","console","log","error","swal","transfers","params","queryLowered","transfer","includes","paginateArray","totalPages","find","i","selectedTransfer","TransferApproval","body","JSON","stringify","message"],"mappings":"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","file":"static/js/150.4ec99894.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { getTransfer } from '../store/action'\nimport { store } from '@store/storeConfig/store'\nimport moment from 'moment'\n\n// ** Third Party Components\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { Slack, User, Settings, Database, Edit, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar) {\n    return <Avatar className='mr-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return <Avatar color={color || 'primary'} className='mr-1' content={`${row.trans_id}` || 'John Doe'} initials />\n  }\n}\n\nexport const columns = [\n  {\n    name: 'Transaction Id',\n    minWidth: '250px',\n    selector: 'trans_id',\n    sortable: true,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <Link\n            to={`/appia/transfers/view/${row.id}`}\n            className='user-name text-truncate mb-0'\n            onClick={() => store.dispatch(getTransfer(store.getState().appiaTransfers.allData, row.id))}\n          >\n            <span className='font-weight-bold'>{row.trans_id}</span>\n          </Link>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'Sender',\n    minWidth: '200px',\n    selector: 'sender_name',\n    sortable: true,\n    cell: row => row.sender_name\n  },\n  {\n    name: 'Receiver',\n    minWidth: '250px',\n    selector: 'receiver_name',\n    sortable: true,\n    cell: row => row.receiver_name\n  },\n  {\n    name: 'Bank',\n    minWidth: '200px',\n    selector: 'bank',\n    sortable: true,\n    cell: row => row.bank\n  },\n  {\n    name: 'Transaction Type',\n    minWidth: '200px',\n    selector: 'trans_type',\n    sortable: true,\n    cell: row => row.trans_type\n  },\n  {\n    name: 'Transfer Amount',\n    minWidth: '200px',\n    selector: 'trans_amount',\n    sortable: true,\n    cell: row => <span>{(row.trans_amount || 0).toLocaleString('en-US', { style: 'currency', currency: 'NGN' })}</span>\n  },\n  {\n    name: 'Status',\n    minWidth: '172px',\n    selector: 'status',\n    sortable: true,\n    cell: row => row.status\n  },\n  {\n    name: 'Date',\n    minWidth: '200px',\n    selector: 'trans_date',\n    sortable: true,\n    cell: row => moment(row.trans_date).format('lll')\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n\n// ** Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { getAllData, getFilteredData } from '../store/action'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { selectThemeColors } from '@utils'\nimport { Card, CardHeader, CardTitle, CardBody, Input, Row, Col, Label, CustomInput, Button } from 'reactstrap'\nimport FormGroup from 'reactstrap/lib/FormGroup'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\nconst FeedbacksList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.appiaTransfers)\n\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: searchTerm\n      })\n    )\n  }, [dispatch])\n\n  const statusOptions = [\n    { value: '', label: 'Select Status', number: 0 },\n    { value: 'Pending', label: 'Pending', number: 1 },\n    { value: 'Successful', label: 'Successful', number: 2 }\n  ]\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getFilteredData(store.allData, {\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        q: searchTerm\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: value,\n        q: searchTerm\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: val\n      })\n    )\n  }\n\n  const filteredData = store.allData.filter(\n    item => (item.receiver_name.toLowerCase() || sender_.name.toLowerCase())\n  )\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Math.ceil(filteredData.length / rowsPerPage)\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\n      />\n    )\n  }\n\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Search Filter</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n          <Col lg=\"4\" md=\"6\">\n              <FormGroup>\n                <Label className='mb-0' for='search-invoice'>\n                  Search:\n              </Label>\n                <Input\n                  id='search-invoice'\n                  type=\"text\"\n                  value={searchTerm}\n                  placeholder='Name & Bank Search'\n                  onChange={e => handleFilter(e.target.value)}\n                />\n              </FormGroup>\n            </Col>\n            <Col lg='4' md='6'>\n              <FormGroup>\n                <Label for='select'>Select Status:</Label>\n                <Select\n                  theme={selectThemeColors}\n                  isClearable={false}\n                  className='react-select'\n                  classNamePrefix='select'\n                  id='select'\n                  options={statusOptions}\n                  value={currentStatus}\n                  onChange={data => {\n                    setCurrentStatus(data)\n                    dispatch(\n                      getFilteredData(store.allData, {\n                        page: currentPage,\n                        perPage: rowsPerPage,\n                        status: data.value,\n                        q: searchTerm\n                      })\n                    )\n                  }}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n      <Card>\n      <Row className='mx-0 mt-3'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='rows-per-page'>Show</Label>\n              <CustomInput\n                className='form-control mx-50'\n                type='select'\n                id='rows-per-page'\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{\n                  width: '10rem',\n                  padding: '0 0.8rem',\n                  backgroundPosition: 'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n                }}\n              >\n                <option value='10'>10</option>\n                <option value='25'>25</option>\n                <option value='50'>50</option>\n              </CustomInput>\n              <Label for='rows-per-page'>Entries</Label>\n            </div>\n          </Col>\n        </Row>\n       <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          sortIcon={<ChevronDown />}\n          className='react-dataTable'\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default FeedbacksList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst FeedbacksList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default FeedbacksList\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"./utils\");\n\nvar propTypes = {\n  children: _propTypes.default.node,\n  row: _propTypes.default.bool,\n  check: _propTypes.default.bool,\n  inline: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n  tag: _utils.tagPropType,\n  className: _propTypes.default.string,\n  cssModule: _propTypes.default.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = (0, _objectWithoutPropertiesLoose2.default)(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n  var classes = (0, _utils.mapToCssModules)((0, _classnames.default)(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/_react.default.createElement(Tag, (0, _extends2.default)({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nvar _default = FormGroup;\nexports.default = _default;","import axios from 'axios'\nimport { paginateArray, sortCompare, apiRequest, swal } from '@utils'\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({ url: '/admin/transfers', method: 'GET' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_ALL_TRANSFERS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n\n  }\n}\n\n// ** Get filtered data on page or row change\nexport const getFilteredData = (transfers, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, status = null} = params\n\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = transfers.filter(\n      transfer =>\n        (transfer.receiver_name.toLowerCase().includes(queryLowered) || transfer.bank.toLowerCase().includes(queryLowered)) &&\n        transfer.status === (status || transfer.status)\n    )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\nexport const getTransfer = (transfers, id) => {\n  return async dispatch => {\n    const transfer = transfers.find(i => i.id === id)\n    dispatch({\n      type: 'GET_TRANSFER',\n      selectedTransfer: transfer\n    })\n  }\n}\n\nexport const TransferApproval = ({trans_id}) => {\n  return async dispatch => {\n    const body = JSON.stringify({trans_id})\n    const response = await apiRequest({url:`/admin/transfer/approve`, method:'POST', body}, dispatch)\n    if (response && response.data.success) {\n      swal('Good!', `${response.data.message}`, 'success')\n    } else {\n      console.log(response)\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n  }\n}"],"sourceRoot":""}