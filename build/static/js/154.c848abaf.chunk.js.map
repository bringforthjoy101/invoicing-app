{"version":3,"sources":["views/appia/subscribers/list/columns.js","views/appia/subscribers/store/action/index.js","views/appia/subscribers/list/Table.js","views/appia/subscribers/list/index.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/lib/FormGroup.js"],"names":["statusObj","Pending","Active","Inactive","columns","name","minWidth","selector","sortable","cell","row","id","email","Badge","className","color","status","pill","moment","created_at","format","getFilteredData","subscribers","params","dispatch","a","q","perPage","page","queryLowered","toLowerCase","filteredData","filter","subscribe","includes","type","data","paginateArray","totalPages","length","SubscribersTable","useDispatch","store","useSelector","state","appiaSubscribers","useState","searchTerm","setSearchTerm","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","value","label","number","currentStatus","setCurrentStatus","picker","setPicker","start","Date","parse","end","useEffect","apiRequest","url","method","response","success","console","log","error","swal","allData","item","Card","CardHeader","CardTitle","tag","CardBody","Row","form","Col","lg","md","Label","for","theme","selectThemeColors","isClearable","classNamePrefix","options","onChange","Input","placeholder","e","val","target","date","mode","sm","CustomInput","parseInt","currentTarget","style","width","padding","backgroundPosition","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationComponent","count","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","dateFilter","contact","isFiltered","Object","keys","some","k","slice","dataToRender","SubscribersList","Table","propTypes","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","func","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","_interopRequireDefault","require","exports","__esModule","default","_extends2","_objectWithoutPropertiesLoose2","_react","_propTypes","_classnames","_utils","children","node","bool","check","inline","disabled","FormGroup","_default"],"mappings":"yNAWMA,EAAY,CAChBC,QAAS,gBACTC,OAAQ,gBACRC,SAAU,gBAGCC,EAAU,CACrB,CACEC,KAAM,UACNC,SAAU,QACVC,SAAU,KACVC,UAAU,EACVC,KAAM,SAAAC,GAAG,OAAIA,EAAIC,KAEnB,CACEN,KAAM,QACNC,SAAU,QACVC,SAAU,QACVC,UAAU,EACVC,KAAM,SAAAC,GAAG,OAAIA,EAAIE,QAEnB,CACEP,KAAM,SACNC,SAAU,QACVC,SAAU,SACVC,UAAU,EACVC,KAAM,SAAAC,GAAG,OACP,cAACG,EAAA,EAAD,CAAOC,UAAU,kBAAkBC,MAAOf,EAAUU,EAAIM,QAASC,MAAI,EAArE,SACGP,EAAIM,WAIX,CACEX,KAAM,kBACNC,SAAU,QACVC,SAAU,aACVC,UAAU,EACVC,KAAM,SAAAC,GAAG,OAAIQ,IAAOR,EAAIS,YAAYC,OAAO,U,sDC1BlCC,EAAkB,SAACC,EAAaC,GAC3C,8CAAO,WAAMC,GAAN,iCAAAC,EAAA,wDACoDF,EAAjDG,SADH,MACO,GADP,IACoDH,EAAzCI,eADX,MACqB,GADrB,IACoDJ,EAA3BK,YADzB,MACgC,EADhC,IACoDL,EAAjBP,cADnC,MAC4C,KAD5C,EAGCa,EAAeH,EAAEI,cACjBC,EAAeT,EAAYU,QAC/B,SAAAC,GAAS,OAAKA,EAAUrB,MAAMkB,cAAcI,SAASL,IACrDI,EAAUjB,UAAYA,GAAUiB,EAAUjB,WAI5CQ,EAAS,CACPW,KAAM,oBACNC,KAAMC,YAAcN,EAAcJ,EAASC,GAC3CU,WAAYP,EAAaQ,OACzBhB,WAdG,2CAAP,uD,wLCqQaiB,EA/PU,WAAO,IAAD,EAEvBhB,EAAWiB,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,oBAHZ,EAMOC,mBAAS,IANhB,mBAMtBC,EANsB,KAMVC,EANU,OAOSF,mBAAS,GAPlB,mBAOtBG,EAPsB,KAOTC,EAPS,OAQSJ,mBAAS,IARlB,mBAQtBK,EARsB,KAQTC,EARS,OASaN,mBAAS,CAAEO,MAAO,GAAIC,MAAO,gBAAiBC,OAAQ,IATnE,mBAStBC,EATsB,KASPC,EATO,OAUDX,mBAAS,MAVR,mBAUtBY,EAVsB,KAUdC,EAVc,KAavBC,EAAQF,GAAUG,KAAKC,MAAMJ,EAAO,IACpCK,EAAML,GAAUG,KAAKC,MAAMJ,EAAO,IAGxCM,qBAAU,WACRxC,ED3CF,uCAAO,WAAMA,GAAN,eAAAC,EAAA,sEACkBwC,YAAW,CAAEC,IAAK,0BAA2BC,OAAQ,OAAS3C,GADhF,YACC4C,EADD,6BAGCA,EAAShC,KAAKA,OAAQgC,EAAShC,KAAKiC,QAHrC,gCAIK7C,EAAS,CACbW,KAAM,sBACNC,KAAMgC,EAAShC,KAAKA,OANrB,8BASDkC,QAAQC,IAAIH,EAASI,OATpB,gCAYHC,YAAK,QAAS,yCAA0C,SAZrD,4CAAP,uDC4CEjD,EACEH,EAAgBqB,EAAMgC,QAAS,CAC7B9C,KAAMqB,EACNtB,QAASwB,EACTnC,OAAQwC,EAAcH,MACtB3B,EAAGqB,EACH5B,WAAYuC,OAGf,CAAClC,IAEJ,IA+DMO,EAAeW,EAAMgC,QAAQ1C,QACjC,SAAA2C,GAAI,OAAKA,EAAK/D,MAAMkB,eAAiB6C,EAAKxD,WAAWW,iBAuDvD,OACE,eAAC,WAAD,WACE,eAAC8C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,6BAEF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACpE,UAAU,aAArB,UACE,cAACqE,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,4BACA,cAAC,IAAD,CACEC,MAAOC,IACPC,aAAa,EACb5E,UAAU,eACV6E,gBAAgB,SAChBhF,GAAG,SACHiF,QAxIM,CACpB,CAAEvC,MAAO,GAAIC,MAAO,gBAAiBC,OAAQ,GAC7C,CAAEF,MAAO,UAAWC,MAAO,UAAWC,OAAQ,GAC9C,CAAEF,MAAO,SAAUC,MAAO,SAAUC,OAAQ,GAC5C,CAAEF,MAAO,WAAYC,MAAO,WAAYC,OAAQ,IAqIlCF,MAAOG,EACPqC,SAAU,SAAAzD,GACRqB,EAAiBrB,GACjBZ,EACEH,EAAgBqB,EAAMgC,QAAS,CAC7B9C,KAAMqB,EACNtB,QAASwB,EACTnC,OAAQoB,EAAKiB,MACb3B,EAAGqB,aAOf,cAACoC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,CAAOxE,UAAU,OAAOyE,IAAI,iBAA5B,qBAGA,cAACO,EAAA,EAAD,CACEnF,GAAG,iBACHwB,KAAK,OACLkB,MAAON,EACPgD,YAAY,eACZF,SAAU,SAAAG,GAAC,OA7HNC,EA6HuBD,EAAEE,OAAO7C,MA5HnDL,EAAciD,QACdzE,EACEH,EAAgBqB,EAAMgC,QAAS,CAC7B9C,KAAMqB,EACNtB,QAASwB,EACTnC,OAAQwC,EAAcH,MACtB3B,EAAGuE,EACH9E,WAAYuC,KARG,IAAAuC,UAiIX,eAACd,EAAA,EAAD,CAAKE,GAAG,IAAIvE,UAAU,cAAtB,UACE,cAACwE,EAAA,EAAD,CAAOxE,UAAU,YAAYyE,IAAI,eAAjC,qBACA,cAAC,KAAD,GACElC,MAAOK,EACP/C,GAAG,eACHG,UAAU,eACV+E,SA1HM,SAACM,GACnBxC,EAAUwC,GACV3E,EACEH,EAAgBqB,EAAMgC,QAAS,CAC7B9C,KAAMqB,EACNtB,QAASwB,EACTnC,OAAQwC,EAAcH,MACtB3B,EAAGqB,EACH5B,WAAYgF,OA8GN,0BAKY,SAAAA,GAAI,OAAIxC,EAAUwC,MAL9B,wBAMW,CACPC,KAAM,UAPV,eAeR,eAACxB,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,CAAKnE,UAAU,YAAf,SACE,cAACqE,EAAA,EAAD,CAAKkB,GAAG,IAAR,SACE,sBAAKvF,UAAU,4BAAf,UACE,cAACwE,EAAA,EAAD,CAAOC,IAAI,gBAAX,kBACA,eAACe,EAAA,EAAD,CACExF,UAAU,qBACVqB,KAAK,SACLxB,GAAG,gBACH0C,MAAOF,EACP0C,SA3KQ,SAAAG,GACpB,IAAM3C,EAAQkD,SAASP,EAAEQ,cAAcnD,OACvC7B,EACEH,EAAgBqB,EAAMgC,QAAS,CAC7B9C,KAAMqB,EACNtB,QAAS0B,EACTrC,OAAQwC,EAAcH,MACtB3B,EAAGqB,EACH5B,WAAYuC,KAGhBN,EAAeC,IAiKHoD,MAAO,CACLC,MAAO,QACPC,QAAS,WACTC,mBAAoB,yDATxB,UAYE,wBAAQvD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,cAACiC,EAAA,EAAD,CAAOC,IAAI,gBAAX,4BAIN,cAAC,IAAD,CACEsB,UAAQ,EACRC,YAAU,EACVC,WAAS,EACTC,YAAU,EACVC,kBAAgB,EAChB7G,QAASA,EACT8G,SAAU,cAAC,IAAD,IACVpG,UAAU,kBACVqG,oBArJiB,WACvB,IAAMC,EAAQC,KAAKC,KAAKvF,EAAaQ,OAASY,GAE9C,OACE,cAAC,IAAD,CACEoE,cAAe,GACfC,UAAW,GACXC,UAAWL,GAAS,EACpBM,gBAAgB,SAChBC,UAA2B,IAAhB1E,EAAoBA,EAAc,EAAI,EACjD2E,aAAc,SAAAhG,GAAI,OAtEC,SAAAA,GACvBJ,EACEH,EAAgBqB,EAAMgC,QAAS,CAC7B9C,KAAMA,EAAKiG,SAAW,EACtBlG,QAASwB,EACTnC,OAAQwC,EAAcH,MACtB3B,EAAGqB,EACH5B,WAAYuC,KAGhBR,EAAetB,EAAKiG,SAAW,GA4DLC,CAAiBlG,IACvCmG,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,6DAqIlBjG,KA9Ha,WACnB,IAAMkG,EAAU,CACdtH,OAAQwC,EAAcH,MACtB3B,EAAGqB,GAECwF,EAAa7F,EAAMgC,QAAQ1C,QAAO,SAACwG,GACvC,GAAI3E,KAAKC,MAAM0E,EAAQrH,aAAeyC,GACpCC,KAAKC,MAAM0E,EAAQrH,aAAe4C,EAClC,OAAOyE,KAILC,EAAaC,OAAOC,KAAKL,GAASM,MAAK,SAAUC,GACrD,OAAOP,EAAQO,GAAGtG,OAAS,KAG7B,OAAKQ,GAAca,GAASG,EACnBwE,EAAWO,MAAM,EAAG3F,GAClBT,EAAMN,KAAKG,OAAS,EACtBG,EAAMN,KACkB,IAAtBM,EAAMN,KAAKG,QAAgBkG,EAC7B,GAEA/F,EAAMgC,QAAQoE,MAAM,EAAG3F,GAuGpB4F,Y,OCvQDC,UARS,WACtB,OACE,qBAAKlI,UAAU,gBAAf,SACE,cAACmI,EAAD,Q,iCCTN,6EAMIC,EAAY,CACdnE,IAAKoE,cACLrI,UAAWsI,IAAUC,OACrBC,UAAWF,IAAUG,OACrBC,SAAUJ,IAAUK,UAAU,CAACL,IAAUG,OAAQH,IAAUC,OAAQD,IAAUM,QAM3E1E,EAAW,SAAkB2E,GAC/B,IAAI7I,EAAY6I,EAAM7I,UAClBwI,EAAYK,EAAML,UAClBE,EAAWG,EAAMH,SACjBI,EAAMD,EAAM5E,IACZ8E,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,WAAY,QAEzFI,EAAUC,0BAAgBC,IAAWnJ,EAAW,aAAcwI,GAClE,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpE/I,UAAWiJ,EACXM,IAAKb,MAITxE,EAASkE,UAAYA,EACrBlE,EAASsF,aAnBU,CACjBvF,IAAK,OAmBQC,O,iCChCf,6EAMIkE,EAAY,CACdnE,IAAKoE,cACLrI,UAAWsI,IAAUC,OACrBC,UAAWF,IAAUG,QAMnBzE,EAAY,SAAmB6E,GACjC,IAAI7I,EAAY6I,EAAM7I,UAClBwI,EAAYK,EAAML,UAClBM,EAAMD,EAAM5E,IACZ8E,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,0BAAgBC,IAAWnJ,EAAW,cAAewI,GACnE,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpE/I,UAAWiJ,MAIfjF,EAAUoE,UAAYA,EACtBpE,EAAUwF,aAjBS,CACjBvF,IAAK,OAiBQD,O,iCC7Bf,6EAMIoE,EAAY,CACdnE,IAAKoE,cACLrI,UAAWsI,IAAUC,OACrBC,UAAWF,IAAUG,QAMnB1E,EAAa,SAAoB8E,GACnC,IAAI7I,EAAY6I,EAAM7I,UAClBwI,EAAYK,EAAML,UAClBM,EAAMD,EAAM5E,IACZ8E,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,0BAAgBC,IAAWnJ,EAAW,eAAgBwI,GACpE,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpE/I,UAAWiJ,MAIflF,EAAWqE,UAAYA,EACvBrE,EAAWyF,aAjBQ,CACjBvF,IAAK,OAiBQF,O,mGC3Bf,IAAI0F,EAAyBC,EAAQ,KAErCC,EAAQC,YAAa,EACrBD,EAAQE,aAAU,EAElB,IAAIC,EAAYL,EAAuBC,EAAQ,MAE3CK,EAAiCN,EAAuBC,EAAQ,MAEhEM,EAASP,EAAuBC,EAAQ,IAExCO,EAAaR,EAAuBC,EAAQ,IAE5CQ,EAAcT,EAAuBC,EAAQ,KAE7CS,EAAST,EAAQ,KAEjBtB,EAAY,CACdgC,SAAUH,EAAWJ,QAAQQ,KAC7BzK,IAAKqK,EAAWJ,QAAQS,KACxBC,MAAON,EAAWJ,QAAQS,KAC1BE,OAAQP,EAAWJ,QAAQS,KAC3BG,SAAUR,EAAWJ,QAAQS,KAC7BrG,IAAKkG,EAAO9B,YACZrI,UAAWiK,EAAWJ,QAAQtB,OAC9BC,UAAWyB,EAAWJ,QAAQpB,QAM5BiC,EAAY,SAAmB7B,GACjC,IAAI7I,EAAY6I,EAAM7I,UAClBwI,EAAYK,EAAML,UAClB5I,EAAMiJ,EAAMjJ,IACZ6K,EAAW5B,EAAM4B,SACjBF,EAAQ1B,EAAM0B,MACdC,EAAS3B,EAAM2B,OACf1B,EAAMD,EAAM5E,IACZ8E,GAAa,EAAIgB,EAA+BF,SAAShB,EAAO,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,QACjII,GAAU,EAAIkB,EAAOjB,kBAAiB,EAAIgB,EAAYL,SAAS7J,IAAWJ,GAAM,MAAe2K,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBjC,GAMhO,MAJY,aAARM,IACFC,EAAW0B,SAAWA,GAGJT,EAAOH,QAAQR,cAAcP,GAAK,EAAIgB,EAAUD,SAAS,GAAId,EAAY,CAC3F/I,UAAWiJ,MAIfyB,EAAUtC,UAAYA,EACtBsC,EAAUlB,aAzBS,CACjBvF,IAAK,OAyBP,IAAI0G,EAAWD,EACff,EAAQE,QAAUc","file":"static/js/154.c848abaf.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport moment from 'moment'\n\n// ** Third Party Components\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { MoreVertical, FileText, Trash2, Archive } from 'react-feather'\n\n\nconst statusObj = {\n  Pending: 'light-warning',\n  Active: 'light-success',\n  Inactive: 'light-danger'\n}\n\nexport const columns = [\n  {\n    name: 'User Id',\n    minWidth: '120px',\n    selector: 'id',\n    sortable: true,\n    cell: row => row.id\n  },\n  {\n    name: 'Email',\n    minWidth: '320px',\n    selector: 'email',\n    sortable: true,\n    cell: row => row.email\n  },\n  {\n    name: 'Status',\n    minWidth: '100px',\n    selector: 'status',\n    sortable: true,\n    cell: row => (\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\n        {row.status}\n      </Badge>\n    )\n  },\n  {\n    name: 'Date Subscribed',\n    minWidth: '200px',\n    selector: 'created_at',\n    sortable: true,\n    cell: row => moment(row.created_at).format('lll')\n  }\n]\n","import { paginateArray, apiRequest, swal } from '@utils'\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({ url: '/admin/misc/subscribers', method: 'GET' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_ALL_SUBSCRIBERS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n\n  }\n}\n\nexport const getFilteredData = (subscribers, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, status = null} = params\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = subscribers.filter(\n      subscribe => (subscribe.email.toLowerCase().includes(queryLowered)) &&\n      subscribe.status === (status || subscribe.status)\n      )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n\n// ** Columns\nimport { columns } from './columns'\nimport Flatpickr from 'react-flatpickr'\n\n// ** Store & Actions\nimport { getAllData, getFilteredData } from '../store/action'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { selectThemeColors } from '@utils'\nimport { Card, CardHeader, CardTitle, CardBody, Input, Row, Col, Label, CustomInput, Button } from 'reactstrap'\n\n// import Breadcrumbs from '@components/breadcrumbs'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport FormGroup from 'reactstrap/lib/FormGroup'\n\n\nconst SubscribersTable = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.appiaSubscribers)\n\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n  const [picker, setPicker] = useState(null)\n\n\n  const start = picker && Date.parse(picker[0])\n  const end = picker && Date.parse(picker[1])\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.value,\n        q: searchTerm,\n        created_at: picker\n      })\n    )\n  }, [dispatch])\n\n  const statusOptions = [\n    { value: '', label: 'Select Status', number: 0 },\n    { value: 'Pending', label: 'Pending', number: 1 },\n    { value: 'Active', label: 'Active', number: 2 },\n    { value: 'Inactive', label: 'Inactive', number: 3 }\n  ]\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getFilteredData(store.allData, {\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        status: currentStatus.value,\n        q: searchTerm,\n        created_at: picker\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: value,\n        status: currentStatus.value,\n        q: searchTerm,\n        created_at: picker\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.value,\n        q: val,\n        created_at: picker\n      })\n    )\n  }\n\n  const handleRange = (date) => {\n    setPicker(date)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.value,\n        q: searchTerm,\n        created_at: date\n      })\n    )\n  }\n\n  const filteredData = store.allData.filter(\n    item => (item.email.toLowerCase() || item.created_at.toLowerCase())\n  )\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Math.ceil(filteredData.length / rowsPerPage)\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\n      />\n    )\n  }\n\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      status: currentStatus.value,\n      q: searchTerm\n    }\n    const dateFilter = store.allData.filter((contact) => {\n      if (Date.parse(contact.created_at) >= start &&\n        Date.parse(contact.created_at) <= end) {\n        return contact\n      }\n    })\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (!searchTerm && start && end) {\n      return dateFilter.slice(0, rowsPerPage)\n    } else if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Search Filter</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row  form className='mt-1 mb-50'>\n            <Col lg='4' md='6'>\n              <FormGroup>\n                <Label for='select'>Select Status:</Label>\n                <Select\n                  theme={selectThemeColors}\n                  isClearable={false}\n                  className='react-select'\n                  classNamePrefix='select'\n                  id='select'\n                  options={statusOptions}\n                  value={currentStatus}\n                  onChange={data => {\n                    setCurrentStatus(data)\n                    dispatch(\n                      getFilteredData(store.allData, {\n                        page: currentPage,\n                        perPage: rowsPerPage,\n                        status: data.value,\n                        q: searchTerm\n                      })\n                    )\n                  }}\n                />\n              </FormGroup>\n            </Col>\n            <Col lg=\"4\" md=\"6\">\n              <FormGroup>\n                <Label className='mb-0' for='search-invoice'>\n                  Search:\n              </Label>\n                <Input\n                  id='search-invoice'\n                  type=\"text\"\n                  value={searchTerm}\n                  placeholder='Email Search'\n                  onChange={e => handleFilter(e.target.value)}\n                />\n              </FormGroup>\n            </Col>\n            <Col md='4' className=\"d-flex mt-2\">\n              <Label className='mb-0 mt-1' for='range-picker'>Range: </Label>\n              <Flatpickr\n                value={picker}\n                id='range-picker'\n                className='form-control'\n                onChange={(handleRange)}\n                onChange={date => setPicker(date)}\n                options={{\n                  mode: 'range'\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n      <Card>\n        <Row className='mx-0 mt-3'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='rows-per-page'>Show</Label>\n              <CustomInput\n                className='form-control mx-50'\n                type='select'\n                id='rows-per-page'\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{\n                  width: '10rem',\n                  padding: '0 0.8rem',\n                  backgroundPosition: 'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n                }}\n              >\n                <option value='10'>10</option>\n                <option value='25'>25</option>\n                <option value='50'>50</option>\n              </CustomInput>\n              <Label for='rows-per-page'>Entries</Label>\n            </div>\n          </Col>\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          sortIcon={<ChevronDown />}\n          className='react-dataTable'\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default SubscribersTable\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst SubscribersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default SubscribersList\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"./utils\");\n\nvar propTypes = {\n  children: _propTypes.default.node,\n  row: _propTypes.default.bool,\n  check: _propTypes.default.bool,\n  inline: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n  tag: _utils.tagPropType,\n  className: _propTypes.default.string,\n  cssModule: _propTypes.default.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = (0, _objectWithoutPropertiesLoose2.default)(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n  var classes = (0, _utils.mapToCssModules)((0, _classnames.default)(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/_react.default.createElement(Tag, (0, _extends2.default)({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nvar _default = FormGroup;\nexports.default = _default;"],"sourceRoot":""}