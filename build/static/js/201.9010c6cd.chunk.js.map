{"version":3,"sources":["views/appia/feedbacks/store/action/index.js","views/appia/feedbacks/list/columns.js","views/appia/feedbacks/list/Table.js","views/appia/feedbacks/list/index.js"],"names":["getFilteredData","feedbacks","params","dispatch","a","q","perPage","page","role","queryLowered","toLowerCase","filteredData","filter","feedback","email","includes","name","type","data","paginateArray","totalPages","length","getFeedback","id","find","i","selectedFeedback","renderClient","row","color","Math","floor","random","avatar","className","img","width","height","content","initials","columns","minWidth","selector","sortable","cell","to","onClick","store","getState","appiaFeedbacks","allData","feature","moment","created_at","format","UncontrolledDropdown","DropdownToggle","tag","size","DropdownMenu","right","DropdownItem","Link","admin_id","appiaAdmins","FeedbacksList","useDispatch","useSelector","state","useState","searchTerm","setSearchTerm","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","useEffect","apiRequest","url","method","response","success","console","log","error","swal","item","Card","CardHeader","CardTitle","CardBody","Row","Col","md","Label","for","Input","value","placeholder","onChange","e","val","target","sm","CustomInput","parseInt","currentTarget","style","padding","backgroundPosition","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationComponent","count","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","slice","dataToRender","Table"],"mappings":"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","file":"static/js/201.9010c6cd.chunk.js","sourcesContent":["import axios from 'axios'\nimport { paginateArray, sortCompare, apiRequest, swal } from '@utils'\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({ url: '/admin/misc/feedbacks', method: 'GET' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_ALL_FEEDBACKS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n\n  }\n}\n\n// ** Get filtered data on page or row change\nexport const getFilteredData = (feedbacks, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, role = null} = params\n\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = feedbacks.filter(\n      feedback =>\n        (feedback.email.toLowerCase().includes(queryLowered) || feedback.name.toLowerCase().includes(queryLowered))\n    )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\nexport const getFeedback = (feedbacks, id) => {\n  return async dispatch => {\n    const feedback = feedbacks.find(i => i.id === id)\n    dispatch({\n      type: 'GET_FEEDBACK',\n      selectedFeedback: feedback\n    })\n  }\n}\n\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { getFeedback } from '../store/action'\nimport { store } from '@store/storeConfig/store'\nimport moment from 'moment'\n\n// ** Third Party Components\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { Slack, User, Settings, Database, Edit, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar) {\n    return <Avatar className='mr-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return <Avatar color={color || 'primary'} className='mr-1' content={`${row.name}` || 'John Doe'} initials />\n  }\n}\n\nexport const columns = [\n  {\n    name: 'Full Name',\n    minWidth: '297px',\n    selector: 'name',\n    sortable: true,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <Link\n            to={`/appia/feedbacks/view/${row.id}`}\n            className='user-name text-truncate mb-0'\n            onClick={() => store.dispatch(getFeedback(store.getState().appiaFeedbacks.allData, row.id))}\n          >\n            <span className='font-weight-bold'>{row.name}</span>\n          </Link>\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'Email',\n    minWidth: '320px',\n    selector: 'email',\n    sortable: true,\n    cell: row => row.email\n  },\n  {\n    name: 'Subject',\n    minWidth: '172px',\n    selector: 'feature',\n    sortable: true,\n    cell: row => row.feature\n  },\n  {\n    name: 'Date',\n    minWidth: '200px',\n    selector: 'created_at',\n    sortable: true,\n    cell: row => moment(row.created_at).format('lll')\n  },\n  {\n    name: 'Actions',\n    minWidth: '100px',\n    selector: 'fullName',\n    sortable: true,\n    cell: row => (\n      <UncontrolledDropdown>\n        <DropdownToggle tag='div' className='btn btn-sm'>\n          <MoreVertical size={14} className='cursor-pointer' />\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem\n            tag={Link}\n            to={`/appia/admin/view/${row.admin_id}`}\n            className='w-100'\n            onClick={() => store.dispatch(getFeedback(store.getState().appiaAdmins.allData, row.admin_id))}\n          >\n            <FileText size={14} className='mr-50' />\n            <span className='align-middle'>Details</span>\n          </DropdownItem>\n          <DropdownItem\n            tag={Link}\n            to={`/appia/admin/edit/${row.id}`}\n            className='w-100'\n            onClick={() => store.dispatch(getFeedback(store.getState().appiaFeedbacks.allData, row.admin_id))}\n          >\n            <Archive size={14} className='mr-50' />\n            <span className='align-middle'>Edit</span>\n          </DropdownItem>\n          <DropdownItem className='w-100'>\n            <Trash2 size={14} className='mr-50' />\n            <span className='align-middle'>Delete</span>\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n\n// ** Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { getAllData, getFilteredData } from '../store/action'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { selectThemeColors } from '@utils'\nimport { Card, CardHeader, CardTitle, CardBody, Input, Row, Col, Label, CustomInput, Button } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\nconst FeedbacksList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.appiaFeedbacks)\n\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: searchTerm\n      })\n    )\n  }, [dispatch])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getFilteredData(store.allData, {\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        q: searchTerm\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: value,\n        q: searchTerm\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: val\n      })\n    )\n  }\n\n  const filteredData = store.allData.filter(\n    item => (item.email.toLowerCase() || item.name.toLowerCase())\n  )\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Math.ceil(filteredData.length / rowsPerPage)\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\n      />\n    )\n  }\n\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Search Filter</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md=\"4\" className=\"d-flex\">\n              <Label className='mb-0 mt-1' for='search-invoice'>\n                Search:\n            </Label>\n              <Input\n                id='search-invoice'\n                className='ml-50 w-100'\n                type='text'\n                value={searchTerm}\n                placeholder='Name and Email Search'\n                onChange={e => handleFilter(e.target.value)}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n      <Card>\n      <Row className='mx-0 mt-3'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='rows-per-page'>Show</Label>\n              <CustomInput\n                className='form-control mx-50'\n                type='select'\n                id='rows-per-page'\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{\n                  width: '10rem',\n                  padding: '0 0.8rem',\n                  backgroundPosition: 'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n                }}\n              >\n                <option value='10'>10</option>\n                <option value='25'>25</option>\n                <option value='50'>50</option>\n              </CustomInput>\n              <Label for='rows-per-page'>Entries</Label>\n            </div>\n          </Col>\n        </Row>\n       <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          sortIcon={<ChevronDown />}\n          className='react-dataTable'\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default FeedbacksList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst FeedbacksList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default FeedbacksList\n"],"sourceRoot":""}