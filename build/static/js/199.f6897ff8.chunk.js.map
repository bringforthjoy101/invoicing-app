<<<<<<< HEAD:build/static/js/207.20b47fbd.chunk.js.map
{"version":3,"sources":["views/extensions/block-ui/CardBlocking.js","views/extensions/block-ui/FormBlocking.js","views/extensions/block-ui/SectionBlocking.js","views/extensions/block-ui/index.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","@core/components/extensions-header/index.js"],"names":["CardBlocking","useState","block","setBlock","customSpinner","setCustomSpinner","message","setMessage","handleBlock","spinner","setTimeout","tag","blocking","loader","Spinner","color","className","Card","CardHeader","CardTitle","CardBody","CardText","Button","outline","onClick","FormBlocking","FormGroup","Label","for","Input","id","type","disabled","SectionBlocking","Editor","title","subTitle","link","Row","Col","sm","propTypes","tagPropType","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","ExtensionsHeader","data-tour","href","target","rel"],"mappings":"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","file":"static/js/207.20b47fbd.chunk.js","sourcesContent":["import { useState } from 'react'\nimport BlockUi from 'react-block-ui'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Button, Spinner } from 'reactstrap'\n\nconst CardBlocking = () => {\n  const [block, setBlock] = useState(false)\n  const [customSpinner, setCustomSpinner] = useState(false)\n  const [message, setMessage] = useState(false)\n\n  const handleBlock = (spinner, message) => {\n    setBlock(true)\n    if (spinner === true) setCustomSpinner(true)\n    else setCustomSpinner(false)\n\n    if (message === true) setMessage(true)\n    else setMessage(false)\n\n    setTimeout(() => {\n      setBlock(false)\n    }, 2000)\n  }\n\n  return (\n    <BlockUi\n      tag='div'\n      blocking={block}\n      /*eslint-disable */\n      {...(customSpinner\n        ? {\n            loader: <Spinner color='primary' className='reload-spinner' />\n          }\n        : {})}\n      {...(message\n        ? {\n            message: <p className='mb-0 font-weight-bold'>Please Wait...</p>\n          }\n        : {})}\n      /*eslint-enable */\n    >\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Card Blocking</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <CardText>\n            Lorem ipsum dolor sit amet, an vel affert soleat possim. Usu meis neglegentur ut, oporteat salutandi\n            dignissim at mea. Pericula erroribus quaerendum ex duo, his autem accusamus ad, alienum detracto rationibus\n            vis et. No est volumus ocurreret vituperata.\n          </CardText>\n          <CardText className='mb-0'>\n            Lorem ipsum dolor sit amet, an vel affert soleat possim. Usu meis neglegentur ut, oporteat salutandi\n            dignissim\n          </CardText>\n          <div className='demo-inline-spacing'>\n            <Button color='primary' outline onClick={() => handleBlock(false, false)}>\n              Default\n            </Button>\n            <Button color='primary' outline onClick={() => handleBlock(true, false)}>\n              Custom Spinner\n            </Button>\n            <Button color='primary' outline onClick={() => handleBlock(false, true)}>\n              Message\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    </BlockUi>\n  )\n}\n\nexport default CardBlocking\n","import { useState } from 'react'\nimport BlockUi from 'react-block-ui'\nimport { Card, CardHeader, CardTitle, CardBody, Button, Spinner, FormGroup, Input, Label } from 'reactstrap'\n\nconst FormBlocking = () => {\n  const [block, setBlock] = useState(false)\n  const [customSpinner, setCustomSpinner] = useState(false)\n  const [message, setMessage] = useState(false)\n\n  const handleBlock = (spinner, message) => {\n    setBlock(true)\n    if (spinner === true) setCustomSpinner(true)\n    else setCustomSpinner(false)\n\n    if (message === true) setMessage(true)\n    else setMessage(false)\n\n    setTimeout(() => {\n      setBlock(false)\n    }, 2000)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Form Blocking</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <BlockUi\n          tag='div'\n          blocking={block}\n          /*eslint-disable */\n          {...(customSpinner\n            ? {\n                loader: <Spinner color='primary' className='reload-spinner' />\n              }\n            : {})}\n          {...(message\n            ? {\n                message: <p className='mb-0 font-weight-bold'>Please Wait...</p>\n              }\n            : {})}\n          /*eslint-enable */\n        >\n          <FormGroup>\n            <Label for='username'>Username</Label>\n            <Input id='username' />\n          </FormGroup>\n          <FormGroup>\n            <Label for='email'>Email</Label>\n            <Input type='email' id='email' />\n          </FormGroup>\n          <FormGroup>\n            <Label for='password'>Password</Label>\n            <Input id='password' />\n          </FormGroup>\n          <FormGroup>\n            <Button className='mr-50 mb-50' color='primary' disabled>\n              Submit\n            </Button>\n            <Button className='mb-50' color='secondary' outline disabled>\n              Cancel\n            </Button>\n          </FormGroup>\n        </BlockUi>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' outline onClick={() => handleBlock(false, false)}>\n            Default\n          </Button>\n          <Button color='primary' outline onClick={() => handleBlock(true, false)}>\n            Custom Spinner\n          </Button>\n          <Button color='primary' outline onClick={() => handleBlock(false, true)}>\n            Message\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FormBlocking\n","import { useState } from 'react'\nimport BlockUi from 'react-block-ui'\nimport { Card, CardHeader, CardTitle, CardText, CardBody, Button, Spinner } from 'reactstrap'\n\nconst SectionBlocking = () => {\n  const [block, setBlock] = useState(false)\n  const [customSpinner, setCustomSpinner] = useState(false)\n  const [message, setMessage] = useState(false)\n\n  const handleBlock = (spinner, message) => {\n    setBlock(true)\n    if (spinner === true) setCustomSpinner(true)\n    else setCustomSpinner(false)\n\n    if (message === true) setMessage(true)\n    else setMessage(false)\n\n    setTimeout(() => {\n      setBlock(false)\n    }, 2000)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Section Blocking</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <BlockUi\n          tag='div'\n          className='border p-1 mb-1'\n          blocking={block}\n          /*eslint-disable */\n          {...(customSpinner\n            ? {\n                loader: <Spinner color='primary' className='reload-spinner' />\n              }\n            : {})}\n          {...(message\n            ? {\n                message: <p className='mb-0 font-weight-bold'>Please Wait...</p>\n              }\n            : {})}\n          /*eslint-enable */\n        >\n          <CardText className='mb-0'>\n            Lorem ipsum dolor sit amet, an vel affert soleat possim. Usu meis neglegentur ut, oporteat salutandi\n            dignissim at mea. Pericula erroribus quaerendum ex duo, his autem accusamus ad, alienum detracto rationibus\n            vis et. No est volumus ocurreret vituperata.\n          </CardText>\n        </BlockUi>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' outline onClick={() => handleBlock(false, false)}>\n            Default\n          </Button>\n          <Button color='primary' outline onClick={() => handleBlock(true, false)}>\n            Custom Spinner\n          </Button>\n          <Button color='primary' outline onClick={() => handleBlock(false, true)}>\n            Message\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SectionBlocking\n","import { Fragment } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport CardBlocking from './CardBlocking'\nimport FormBlocking from './FormBlocking'\nimport SectionBlocking from './SectionBlocking'\nimport ExtensionsHeader from '@components/extensions-header'\n\nimport 'react-block-ui/dist/style.css'\n\nconst Editor = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React BlockUI'\n        subTitle='Easy way to block the user from interacting with your UI.'\n        link='https://availity.github.io/react-block-ui/'\n      />\n\n      <Row>\n        <Col sm={12}>\n          <SectionBlocking />\n        </Col>\n        <Col sm={12}>\n          <CardBlocking />\n        </Col>\n        <Col sm={12}>\n          <FormBlocking />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Editor\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}
=======
{"version":3,"sources":["views/extensions/block-ui/CardBlocking.js","views/extensions/block-ui/FormBlocking.js","views/extensions/block-ui/SectionBlocking.js","views/extensions/block-ui/index.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","@core/components/extensions-header/index.js"],"names":["CardBlocking","useState","block","setBlock","customSpinner","setCustomSpinner","message","setMessage","handleBlock","spinner","setTimeout","tag","blocking","loader","Spinner","color","className","Card","CardHeader","CardTitle","CardBody","CardText","Button","outline","onClick","FormBlocking","FormGroup","Label","for","Input","id","type","disabled","SectionBlocking","Editor","title","subTitle","link","Row","Col","sm","propTypes","tagPropType","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","ExtensionsHeader","data-tour","href","target","rel"],"mappings":"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","file":"static/js/199.f6897ff8.chunk.js","sourcesContent":["import { useState } from 'react'\nimport BlockUi from 'react-block-ui'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Button, Spinner } from 'reactstrap'\n\nconst CardBlocking = () => {\n  const [block, setBlock] = useState(false)\n  const [customSpinner, setCustomSpinner] = useState(false)\n  const [message, setMessage] = useState(false)\n\n  const handleBlock = (spinner, message) => {\n    setBlock(true)\n    if (spinner === true) setCustomSpinner(true)\n    else setCustomSpinner(false)\n\n    if (message === true) setMessage(true)\n    else setMessage(false)\n\n    setTimeout(() => {\n      setBlock(false)\n    }, 2000)\n  }\n\n  return (\n    <BlockUi\n      tag='div'\n      blocking={block}\n      /*eslint-disable */\n      {...(customSpinner\n        ? {\n            loader: <Spinner color='primary' className='reload-spinner' />\n          }\n        : {})}\n      {...(message\n        ? {\n            message: <p className='mb-0 font-weight-bold'>Please Wait...</p>\n          }\n        : {})}\n      /*eslint-enable */\n    >\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Card Blocking</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <CardText>\n            Lorem ipsum dolor sit amet, an vel affert soleat possim. Usu meis neglegentur ut, oporteat salutandi\n            dignissim at mea. Pericula erroribus quaerendum ex duo, his autem accusamus ad, alienum detracto rationibus\n            vis et. No est volumus ocurreret vituperata.\n          </CardText>\n          <CardText className='mb-0'>\n            Lorem ipsum dolor sit amet, an vel affert soleat possim. Usu meis neglegentur ut, oporteat salutandi\n            dignissim\n          </CardText>\n          <div className='demo-inline-spacing'>\n            <Button color='primary' outline onClick={() => handleBlock(false, false)}>\n              Default\n            </Button>\n            <Button color='primary' outline onClick={() => handleBlock(true, false)}>\n              Custom Spinner\n            </Button>\n            <Button color='primary' outline onClick={() => handleBlock(false, true)}>\n              Message\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    </BlockUi>\n  )\n}\n\nexport default CardBlocking\n","import { useState } from 'react'\nimport BlockUi from 'react-block-ui'\nimport { Card, CardHeader, CardTitle, CardBody, Button, Spinner, FormGroup, Input, Label } from 'reactstrap'\n\nconst FormBlocking = () => {\n  const [block, setBlock] = useState(false)\n  const [customSpinner, setCustomSpinner] = useState(false)\n  const [message, setMessage] = useState(false)\n\n  const handleBlock = (spinner, message) => {\n    setBlock(true)\n    if (spinner === true) setCustomSpinner(true)\n    else setCustomSpinner(false)\n\n    if (message === true) setMessage(true)\n    else setMessage(false)\n\n    setTimeout(() => {\n      setBlock(false)\n    }, 2000)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Form Blocking</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <BlockUi\n          tag='div'\n          blocking={block}\n          /*eslint-disable */\n          {...(customSpinner\n            ? {\n                loader: <Spinner color='primary' className='reload-spinner' />\n              }\n            : {})}\n          {...(message\n            ? {\n                message: <p className='mb-0 font-weight-bold'>Please Wait...</p>\n              }\n            : {})}\n          /*eslint-enable */\n        >\n          <FormGroup>\n            <Label for='username'>Username</Label>\n            <Input id='username' />\n          </FormGroup>\n          <FormGroup>\n            <Label for='email'>Email</Label>\n            <Input type='email' id='email' />\n          </FormGroup>\n          <FormGroup>\n            <Label for='password'>Password</Label>\n            <Input id='password' />\n          </FormGroup>\n          <FormGroup>\n            <Button className='mr-50 mb-50' color='primary' disabled>\n              Submit\n            </Button>\n            <Button className='mb-50' color='secondary' outline disabled>\n              Cancel\n            </Button>\n          </FormGroup>\n        </BlockUi>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' outline onClick={() => handleBlock(false, false)}>\n            Default\n          </Button>\n          <Button color='primary' outline onClick={() => handleBlock(true, false)}>\n            Custom Spinner\n          </Button>\n          <Button color='primary' outline onClick={() => handleBlock(false, true)}>\n            Message\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FormBlocking\n","import { useState } from 'react'\nimport BlockUi from 'react-block-ui'\nimport { Card, CardHeader, CardTitle, CardText, CardBody, Button, Spinner } from 'reactstrap'\n\nconst SectionBlocking = () => {\n  const [block, setBlock] = useState(false)\n  const [customSpinner, setCustomSpinner] = useState(false)\n  const [message, setMessage] = useState(false)\n\n  const handleBlock = (spinner, message) => {\n    setBlock(true)\n    if (spinner === true) setCustomSpinner(true)\n    else setCustomSpinner(false)\n\n    if (message === true) setMessage(true)\n    else setMessage(false)\n\n    setTimeout(() => {\n      setBlock(false)\n    }, 2000)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Section Blocking</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <BlockUi\n          tag='div'\n          className='border p-1 mb-1'\n          blocking={block}\n          /*eslint-disable */\n          {...(customSpinner\n            ? {\n                loader: <Spinner color='primary' className='reload-spinner' />\n              }\n            : {})}\n          {...(message\n            ? {\n                message: <p className='mb-0 font-weight-bold'>Please Wait...</p>\n              }\n            : {})}\n          /*eslint-enable */\n        >\n          <CardText className='mb-0'>\n            Lorem ipsum dolor sit amet, an vel affert soleat possim. Usu meis neglegentur ut, oporteat salutandi\n            dignissim at mea. Pericula erroribus quaerendum ex duo, his autem accusamus ad, alienum detracto rationibus\n            vis et. No est volumus ocurreret vituperata.\n          </CardText>\n        </BlockUi>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' outline onClick={() => handleBlock(false, false)}>\n            Default\n          </Button>\n          <Button color='primary' outline onClick={() => handleBlock(true, false)}>\n            Custom Spinner\n          </Button>\n          <Button color='primary' outline onClick={() => handleBlock(false, true)}>\n            Message\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SectionBlocking\n","import { Fragment } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport CardBlocking from './CardBlocking'\nimport FormBlocking from './FormBlocking'\nimport SectionBlocking from './SectionBlocking'\nimport ExtensionsHeader from '@components/extensions-header'\n\nimport 'react-block-ui/dist/style.css'\n\nconst Editor = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React BlockUI'\n        subTitle='Easy way to block the user from interacting with your UI.'\n        link='https://availity.github.io/react-block-ui/'\n      />\n\n      <Row>\n        <Col sm={12}>\n          <SectionBlocking />\n        </Col>\n        <Col sm={12}>\n          <CardBlocking />\n        </Col>\n        <Col sm={12}>\n          <FormBlocking />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Editor\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}
>>>>>>> c8128566a295f0c463b3b54a25058bb2b342203b:build/static/js/199.f6897ff8.chunk.js.map
