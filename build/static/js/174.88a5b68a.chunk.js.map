{"version":3,"sources":["views/appia/claimedRewards/list/columns.js","views/appia/claimedRewards/list/Table.js","views/appia/claimedRewards/list/index.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","views/appia/claimedRewards/store/action/index.js"],"names":["renderClient","row","color","Math","floor","random","avatar","className","img","width","height","content","names","initials","columns","name","minWidth","selector","sortable","cell","to","id","onClick","store","dispatch","getClaim","getState","appiaClaimedRewards","allData","user_id","email","username","phone","moment","created_at","format","DataPlansPlist","useDispatch","useSelector","state","useState","searchTerm","setSearchTerm","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","setUserData","useEffect","getAllData","getFilteredData","page","perPage","q","isUserLoggedIn","JSON","parse","localStorage","getItem","filteredData","filter","item","toLowerCase","toString","Card","CardHeader","CardTitle","tag","CardBody","Row","Col","md","Label","for","Input","type","value","placeholder","onChange","e","val","target","sm","CustomInput","parseInt","currentTarget","style","padding","backgroundPosition","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","count","ceil","length","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","data","slice","dataToRender","UsersList","Table","propTypes","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","func","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","a","apiRequest","url","method","response","success","console","log","error","swal","claimedRewards","params","role","category","queryLowered","claimed","includes","paginateArray","totalPages","find","i","selectedClaim","getUserClaimHistory","reward_id","getFilteredUserClaims","claims","claim"],"mappings":"oPAeMA,EAAe,SAAAC,GACnB,IAEEC,EADS,CAAC,gBAAiB,eAAgB,gBAAiB,aAAc,gBAAiB,mBAD5EC,KAAKC,MAAsB,EAAhBD,KAAKE,WAIjC,OAAIJ,EAAIK,OACC,cAAC,IAAD,CAAQC,UAAU,OAAOC,IAAKP,EAAIK,OAAQG,MAAM,KAAKC,OAAO,OAE5D,cAAC,IAAD,CAAQR,MAAOA,GAAS,UAAWK,UAAU,OAAOI,QAAS,UAAGV,EAAIW,QAAW,WAAYC,UAAQ,KAIjGC,EAAU,CACrB,CACEC,KAAM,OACNC,SAAU,QACVC,SAAU,QACVC,UAAU,EACVC,KAAM,SAAAlB,GAAG,OACP,sBAAKM,UAAU,iDAAf,UACGP,EAAaC,GACd,sBAAKM,UAAU,qBAAf,UACE,cAAC,IAAD,CACEa,GAAE,qCAAgCnB,EAAIoB,IACtCd,UAAU,+BACVe,QAAS,kBAAMC,IAAMC,SAASC,YAASF,IAAMG,WAAWC,oBAAoBC,QAAS3B,EAAIoB,MAH3F,SAKE,sBAAMd,UAAU,mBAAhB,SAAoCN,EAAIW,UAExC,uBAAOL,UAAU,gCAAjB,SAAkDN,EAAI4B,kBAKhE,CACEd,KAAM,QACNC,SAAU,QACVC,SAAU,QACVC,UAAU,EACVC,KAAM,SAAAlB,GAAG,OAAIA,EAAI6B,QAEnB,CACEf,KAAM,YACNC,SAAU,QACVC,SAAU,WACVC,UAAU,EACVC,KAAM,SAAAlB,GAAG,OAAIA,EAAI8B,WAEnB,CACEhB,KAAM,QACNC,SAAU,QACVC,SAAU,QACVC,UAAU,EACVC,KAAM,SAAAlB,GAAG,OAAIA,EAAI+B,QAEnB,CACEjB,KAAM,OACNC,SAAU,QACVC,SAAU,aACVC,UAAU,EACVC,KAAM,SAAAlB,GAAG,OAAIgC,IAAOhC,EAAIiC,YAAYC,OAAO,U,+ICkIhCC,G,cArLQ,WAAO,IAAD,EAErBZ,EAAWa,cACXd,EAAQe,aAAY,SAAAC,GAAK,OAAIA,EAAMZ,uBAHd,EAMSa,mBAAS,IANlB,mBAMpBC,EANoB,KAMRC,EANQ,OAOWF,mBAAS,GAPpB,mBAOpBG,EAPoB,KAOPC,EAPO,OAQWJ,mBAAS,IARpB,mBAQpBK,EARoB,KAQPC,EARO,OASKN,mBAAS,MATd,mBASVO,GATU,WAa3BC,qBAAU,WACRxB,EAASyB,eACTzB,EACE0B,YAAgB3B,EAAMK,QAAS,CAC7BuB,KAAMR,EACNS,QAASP,EACTQ,EAAGZ,OAGN,CAACjB,IAEJwB,qBAAU,WACiB,OAArBM,eACFP,EAAYQ,KAAKC,MAAMC,aAAaC,QAAQ,gBAE7C,IAGH,IAoCMC,EAAepC,EAAMK,QAAQgC,QACjC,SAAAC,GAAI,OAAKA,EAAKhC,QAAQiC,eAAiBD,EAAKjD,MAAMkD,eAAiBD,EAAK/B,MAAMgC,eAAiBD,EAAK9B,SAAS+B,eAAiBD,EAAK7B,MAAM+B,WAAWD,iBA8CtJ,OACE,eAAC,WAAD,WACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,6BAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIhE,UAAU,SAAtB,UACE,cAACiE,EAAA,EAAD,CAAOjE,UAAU,YAAYkE,IAAI,iBAAjC,qBAGA,cAACC,EAAA,EAAD,CACErD,GAAG,iBACHd,UAAU,cACVoE,KAAK,OACLC,MAAOnC,EACPoC,YAAY,iCACZC,SAAU,SAAAC,GAAC,OA5EJC,EA4EqBD,EAAEE,OAAOL,MA3EjDlC,EAAcsC,QACdxD,EACE0B,YAAgB3B,EAAMK,QAAS,CAC7BuB,KAAMR,EACNS,QAASP,EACTQ,EAAG2B,KANY,IAAAA,eAkFjB,eAAChB,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,CAAK9D,UAAU,iBAAf,SACE,cAAC+D,EAAA,EAAD,CAAKY,GAAG,IAAR,SACE,sBAAK3E,UAAU,4BAAf,UACE,cAACiE,EAAA,EAAD,CAAOC,IAAI,gBAAX,kBACA,eAACU,EAAA,EAAD,CACE5E,UAAU,qBACVoE,KAAK,SACLtD,GAAG,gBACHuD,MAAO/B,EACPiC,SAzGQ,SAAAC,GACpB,IAAMH,EAAQQ,SAASL,EAAEM,cAAcT,OACvCpD,EACE0B,YAAgB3B,EAAMK,QAAS,CAC7BuB,KAAMR,EACNS,QAASwB,EACTvB,EAAGZ,KAGPK,EAAe8B,IAiGHU,MAAO,CACL7E,MAAO,QACP8E,QAAS,WACTC,mBAAoB,yDATxB,UAYE,wBAAQZ,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,cAACJ,EAAA,EAAD,CAAOC,IAAI,gBAAX,4BAIN,cAAC,KAAD,GACElE,UAAU,wBACVkF,UAAQ,EACRC,YAAU,EACVC,WAAS,EACTC,YAAU,EACVC,kBAAgB,EAChB/E,QAASA,EACTgF,SAAU,cAAC,IAAD,KARZ,0BASY,mBATZ,qCA3FmB,WACvB,IAAMC,EAAQ5F,KAAK6F,KAAKrC,EAAasC,OAASpD,GAE9C,OACE,cAAC,IAAD,CACEqD,cAAe,GACfC,UAAW,GACXC,UAAWL,GAAS,EACpBM,gBAAgB,SAChBC,UAA2B,IAAhB3D,EAAoBA,EAAc,EAAI,EACjD4D,aAAc,SAAApD,GAAI,OAnDC,SAAAA,GACvB3B,EACE0B,YAAgB3B,EAAMK,QAAS,CAC7BuB,KAAMA,EAAKqD,SAAW,EACtBpD,QAASP,EACTQ,EAAGZ,KAGPG,EAAeO,EAAKqD,SAAW,GA2CLC,CAAiBtD,IACvCuD,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,+DA0EpB,qBAnEe,WACnB,IAAMC,EAAU,CACd5D,EAAGZ,GAGCyE,EAAaC,OAAOC,KAAKH,GAASI,MAAK,SAAUC,GACrD,OAAOL,EAAQK,GAAGrB,OAAS,KAG7B,OAAI1E,EAAMgG,KAAKtB,OAAS,EACf1E,EAAMgG,KACkB,IAAtBhG,EAAMgG,KAAKtB,QAAgBiB,EAC7B,GAEA3F,EAAMK,QAAQ4F,MAAM,EAAG3E,GAgEpB4E,IAXR,Y,OC7KOC,UARG,WAChB,OACE,qBAAKnH,UAAU,gBAAf,SACE,cAACoH,EAAD,Q,iCCTN,6EAMIC,EAAY,CACdzD,IAAK0D,cACLtH,UAAWuH,IAAUC,OACrBC,UAAWF,IAAUG,OACrBC,SAAUJ,IAAUK,UAAU,CAACL,IAAUG,OAAQH,IAAUC,OAAQD,IAAUM,QAM3EhE,EAAW,SAAkBiE,GAC/B,IAAI9H,EAAY8H,EAAM9H,UAClByH,EAAYK,EAAML,UAClBE,EAAWG,EAAMH,SACjBI,EAAMD,EAAMlE,IACZoE,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,WAAY,QAEzFI,EAAUC,0BAAgBC,IAAWpI,EAAW,aAAcyH,GAClE,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEhI,UAAWkI,EACXM,IAAKb,MAIT9D,EAASwD,UAAYA,EACrBxD,EAAS4E,aAnBU,CACjB7E,IAAK,OAmBQC,O,iCChCf,6EAMIwD,EAAY,CACdzD,IAAK0D,cACLtH,UAAWuH,IAAUC,OACrBC,UAAWF,IAAUG,QAMnB/D,EAAY,SAAmBmE,GACjC,IAAI9H,EAAY8H,EAAM9H,UAClByH,EAAYK,EAAML,UAClBM,EAAMD,EAAMlE,IACZoE,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,0BAAgBC,IAAWpI,EAAW,cAAeyH,GACnE,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEhI,UAAWkI,MAIfvE,EAAU0D,UAAYA,EACtB1D,EAAU8E,aAjBS,CACjB7E,IAAK,OAiBQD,O,iCC7Bf,6EAMI0D,EAAY,CACdzD,IAAK0D,cACLtH,UAAWuH,IAAUC,OACrBC,UAAWF,IAAUG,QAMnBhE,EAAa,SAAoBoE,GACnC,IAAI9H,EAAY8H,EAAM9H,UAClByH,EAAYK,EAAML,UAClBM,EAAMD,EAAMlE,IACZoE,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,0BAAgBC,IAAWpI,EAAW,eAAgByH,GACpE,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEhI,UAAWkI,MAIfxE,EAAW2D,UAAYA,EACvB3D,EAAW+E,aAjBQ,CACjB7E,IAAK,OAiBQF,O,+RCxBFhB,G,OAAa,WACxB,8CAAO,WAAMzB,GAAN,eAAAyH,EAAA,sEACkBC,YAAW,CAAEC,IAAK,wBAAyBC,OAAQ,QAAU5H,GAD/E,YACC6H,EADD,6BAGCA,EAAS9B,KAAKA,OAAQ8B,EAAS9B,KAAK+B,QAHrC,gCAIK9H,EAAS,CACbmD,KAAM,0BACN4C,KAAM8B,EAAS9B,KAAKA,OANrB,8BASDgC,QAAQC,IAAIH,EAASI,OATpB,gCAYHC,YAAK,QAAS,yCAA0C,SAZrD,4CAAP,wDAmBWxG,EAAkB,SAACyG,EAAgBC,GAC9C,8CAAO,WAAMpI,GAAN,iCAAAyH,EAAA,wDACoEW,EAAjEvG,SADH,MACO,GADP,IACoEuG,EAAzDxG,eADX,MACqB,GADrB,IACoEwG,EAA3CzG,YADzB,MACgC,EADhC,IACoEyG,EAAjCC,UADnC,MAC0C,KAD1C,IACoED,EAApBE,cADhD,MAC2D,KAD3D,EAICC,EAAe1G,EAAES,cACjBH,EAAegG,EAAe/F,QAClC,SAAAoG,GAAO,OACJA,EAAQnI,QAAQiC,cAAcmG,SAASF,IAAiBC,EAAQpJ,MAAMkD,cAAcmG,SAASF,IAAiBC,EAAQlI,MAAMgC,cAAcmG,SAASF,IAAiBC,EAAQjI,SAAS+B,cAAcmG,SAASF,IAAiBC,EAAQhI,MAAM+B,WAAWD,cAAcmG,SAASF,MAIlRvI,EAAS,CACPmD,KAAM,4BACN4C,KAAM2C,YAAcvG,EAAcP,EAASD,GAC3CgH,WAAYxG,EAAasC,OACzB2D,WAfG,2CAAP,uDAoBWnI,EAAW,SAACkI,EAAgBtI,GACvC,8CAAO,WAAMG,GAAN,eAAAyH,EAAA,sDACCe,EAAUL,EAAeS,MAAK,SAAAC,GAAC,OAAIA,EAAEhJ,KAAOA,KAClDG,EAAS,CACPmD,KAAM,YACN2F,cAAeN,IAJZ,2CAAP,uDASWO,EAAsB,SAACC,GAClC,8CAAO,WAAMhJ,GAAN,eAAAyH,EAAA,sEACkBC,YAAW,CAAEC,IAAI,yBAAD,OAA2BqB,GAAapB,OAAQ,OAAS5H,GAD3F,YACC6H,EADD,6BAGCA,EAAS9B,KAAKA,OAAQ8B,EAAS9B,KAAK+B,QAHrC,gCAIK9H,EAAS,CACbmD,KAAM,0BACN4C,KAAM8B,EAAS9B,KAAKA,OANrB,8BASDgC,QAAQC,IAAIH,EAASI,OATpB,gCAYHC,YAAK,QAAS,0CAA2C,SAZtD,4CAAP,uDAkBWe,EAAwB,SAACC,EAAQd,GAC5C,8CAAO,WAAMpI,GAAN,6BAAAyH,EAAA,+DACsCW,EAAnCvG,SADH,MACO,GADP,IACsCuG,EAA3BxG,eADX,MACqB,GADrB,IACsCwG,EAAbzG,YADzB,MACgC,EADhC,EAIC4G,EAJD,OAIgB1G,QAJhB,IAIgBA,OAJhB,EAIgBA,EAAGS,cAClBH,EALD,OAKgB+G,QALhB,IAKgBA,OALhB,EAKgBA,EAAQ9G,QAC3B,SAAA+G,GAAK,2BAAU,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAO/J,aAAP,mBAAckD,qBAAd,eAA6BmG,SAASF,MAAtC,OAAuDY,QAAvD,IAAuDA,GAAvD,UAAuDA,EAAO7I,aAA9D,iBAAuD,EAAcgC,qBAArE,aAAuD,EAA6BmG,SAASF,MAA7F,OAA8GY,QAA9G,IAA8GA,GAA9G,UAA8GA,EAAO5I,gBAArH,iBAA8G,EAAiB+B,qBAA/H,aAA8G,EAAgCmG,SAASF,MAAxJ,OAA0KY,QAA1K,IAA0KA,GAA1K,UAA0KA,EAAO9I,eAAjL,iBAA0K,EAAgBiC,qBAA1L,aAA0K,EAA+BmG,SAASF,OANxN,SAQCvI,EAAS,CACbmD,KAAM,iBACN4C,KAAM2C,YAAcvG,EAAcP,EAASD,GAC3CgH,WAAU,OAAExG,QAAF,IAAEA,OAAF,EAAEA,EAAcsC,OAC1B2D,WAZG,2CAAP","file":"static/js/174.88a5b68a.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { getClaim } from '../store/action'\nimport moment from 'moment'\nimport { store } from '@store/storeConfig/store'\n\n// ** Third Party Components\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { Slack, User, Settings, Database, Edit, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\n\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar) {\n    return <Avatar className='mr-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return <Avatar color={color || 'primary'} className='mr-1' content={`${row.names}` || 'John Doe'} initials />\n  }\n}\n\nexport const columns = [\n  {\n    name: 'User',\n    minWidth: '230px',\n    selector: 'names',\n    sortable: true,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <Link\n            to={`/appia/claimedRewards/view/${row.id}`}\n            className='user-name text-truncate mb-0'\n            onClick={() => store.dispatch(getClaim(store.getState().appiaClaimedRewards.allData, row.id))}\n          >\n            <span className='font-weight-bold'>{row.names}</span>\n          </Link>\n            <small className='text-truncate text-muted mb-0'>{row.user_id}</small>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'Email',\n    minWidth: '200px',\n    selector: 'email',\n    sortable: true,\n    cell: row => row.email\n  },\n  {\n    name: 'User Name',\n    minWidth: '140px',\n    selector: 'username',\n    sortable: true,\n    cell: row => row.username\n  },\n  {\n    name: 'Phone',\n    minWidth: '140px',\n    selector: 'phone',\n    sortable: true,\n    cell: row => row.phone\n  },\n  {\n    name: 'Date',\n    minWidth: '200px',\n    selector: 'created_at',\n    sortable: true,\n    cell: row => moment(row.created_at).format('lll')\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Columns\nimport { columns } from './columns'\n\n\n// ** Store & Actions\nimport { getAllData, getFilteredData } from '../store/action'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { selectThemeColors, isUserLoggedIn } from '@utils'\nimport { Card, CardHeader, CardTitle, CardBody, Input, Row, Col, Label, CustomInput, Button } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\nconst DataPlansPlist = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.appiaClaimedRewards)\n\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [userData, setUserData] = useState(null)\n\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: searchTerm\n      })\n    )\n  }, [dispatch])\n\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getFilteredData(store.allData, {\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        q: searchTerm\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: value,\n        q: searchTerm\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: val\n      })\n    )\n  }\n\n  const filteredData = store.allData.filter(\n    item => (item.user_id.toLowerCase() || item.names.toLowerCase() || item.email.toLowerCase() || item.username.toLowerCase() || item.phone.toString().toLowerCase())\n  )\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Math.ceil(filteredData.length / rowsPerPage)\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\n      />\n    )\n  }\n\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Search Filter</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md=\"4\" className=\"d-flex\">\n              <Label className='mb-0 mt-1' for='search-invoice'>\n                Search:\n            </Label>\n              <Input\n                id='search-invoice'\n                className='ml-50 w-100'\n                type='text'\n                value={searchTerm}\n                placeholder='User and Transaction Id Search'\n                onChange={e => handleFilter(e.target.value)}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n      <Card>\n        <Row className='mx-0 mt-3 mb-0'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='rows-per-page'>Show</Label>\n              <CustomInput\n                className='form-control mx-50'\n                type='select'\n                id='rows-per-page'\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{\n                  width: '10rem',\n                  padding: '0 0.8rem',\n                  backgroundPosition: 'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n                }}\n              >\n                <option value='10'>10</option>\n                <option value='25'>25</option>\n                <option value='50'>50</option>\n              </CustomInput>\n              <Label for='rows-per-page'>Entries</Label>\n            </div>\n          </Col>\n        </Row>\n        <DataTable\n          className='table-hover-animation'\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          sortIcon={<ChevronDown />}\n          className='react-dataTable'\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default DataPlansPlist\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import { paginateArray, sortCompare, apiRequest, swal } from '@utils'\nimport { data } from 'jquery'\n\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({ url: '/admin/rewards/claims', method: 'POST' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_ALL_CLAIMED_REWARDS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n\n  }\n}\n\n// ** Get filtered data on page or row change\nexport const getFilteredData = (claimedRewards, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, role = null, category = null } = params\n\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = claimedRewards.filter(\n      claimed =>\n        (claimed.user_id.toLowerCase().includes(queryLowered) || claimed.names.toLowerCase().includes(queryLowered) || claimed.email.toLowerCase().includes(queryLowered) || claimed.username.toLowerCase().includes(queryLowered) || claimed.phone.toString().toLowerCase().includes(queryLowered))\n    )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_CLAIMED_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\nexport const getClaim = (claimedRewards, id) => {\n  return async dispatch => {\n    const claimed = claimedRewards.find(i => i.id === id)\n    dispatch({\n      type: 'GET_CLAIM',\n      selectedClaim: claimed\n    })\n  }\n}\n\nexport const getUserClaimHistory = (reward_id) => {\n  return async dispatch => {\n    const response = await apiRequest({ url: `/admin/rewards/claims/${reward_id}`, method: 'GET' }, dispatch)\n    if (response) {\n      if (response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_USER_CLAIM_HISTORYS',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Something went wrong with your network.', 'error')\n    }\n\n  }\n}\n\nexport const getFilteredUserClaims = (claims, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1 } = params\n    /* eslint-enable */\n\n    const queryLowered = q?.toLowerCase()\n    const filteredData = claims?.filter(\n      claim => (claim?.names?.toLowerCase()?.includes(queryLowered) || claim?.email?.toLowerCase()?.includes(queryLowered) || claim?.username?.toLowerCase()?.includes(queryLowered)) || claim?.user_id?.toLowerCase()?.includes(queryLowered))\n    /* eslint-enable  */\n    await dispatch({\n      type: 'GET_USER_CLAIM',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData?.length,\n      params\n    })\n  }\n}\n"],"sourceRoot":""}