{"version":3,"sources":["views/appia/funds/view/AddFunds.js","views/appia/funds/view/PlanCard.js","views/appia/funds/view/UserInfoCard.js","views/appia/funds/view/index.js","views/appia/funds/store/action/index.js"],"names":["AddFundsSchema","Yup","shape","amount","lessThan","required","positive","integer","reason","min","max","user_id","AddFunds","userId","dispatch","userData","useDispatch","useState","formModal","setFormModal","Button","Ripple","className","color","outline","block","onClick","Modal","isOpen","toggle","ModalHeader","initialValues","validationSchema","onSubmit","values","a","setSubmitting","addFunds","errors","touched","isSubmitting","ModalBody","FormGroup","htmlFor","type","name","placeholder","component","ModalFooter","disabled","Spinner","size","DeductFunds","deductFunds","PlanCard","selectedUser","Card","CardHeader","CardBody","UserInfoCard","detail","Row","Col","xl","lg","avatar","src","alt","height","width","Math","floor","random","initials","content","names","contentStyles","borderRadius","fontSize","style","renderUserImg","CardText","tag","email","balance","toLocaleString","currency","appia_coins","status","phone","user_bank_details","account_name","account_number","bank_name","user_providus_details","UserView","props","store","useSelector","state","appiaFunds","id","useParams","setUserData","setDetail","userDetails","apiRequest","url","method","response","data","success","swal","useEffect","getUser","allData","isUserLoggedIn","JSON","parse","localStorage","getItem","undefined","md","Alert","to","getAllData","console","log","getFilteredData","users","params","q","perPage","page","queryLowered","toLowerCase","filteredData","filter","user","includes","referral_code","paginateArray","totalPages","length","find","i","body","stringify"],"mappings":"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","file":"static/js/214.2e79912b.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { Button, Spinner, Modal, ModalHeader, ModalBody, ModalFooter, Label, FormGroup, Input } from 'reactstrap'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as Yup from 'yup'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { addFunds, deductFunds, passwordReset, blacklistUser, blacklistUserAsset } from '../store/action'\n\nconst AddFundsSchema = Yup.object().shape({\n  amount: Yup.number()\n    .lessThan(100000, `You cant add funds more than 100000`)\n    .required('Amount is required').positive().integer(),\n  reason: Yup.string()\n    .min(3, \"Reason too Short!\")\n    .max(50, \"Reason too Long!\")\n    .required('Reason is required'),\n  user_id: Yup.string().required(\"required\")\n})\n\nconst BlacklistSchema = Yup.object().shape({\n  user_id: Yup.string().required(\"required\"),\n  reason: Yup.string().required(\"required\")\n})\n\nexport const AddFunds = ({ userId, userData }) => {\n  const dispatch = useDispatch()\n  const [formModal, setFormModal] = useState(false)\n\n\n  return (\n    <div>\n      <Button.Ripple className='text-center mb-1' color='primary' outline block onClick={() => setFormModal(!formModal)}>\n        Add Funds\n      </Button.Ripple>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n        <ModalHeader toggle={() => setFormModal(!formModal)}>Add Funds</ModalHeader>\n        <Formik\n          initialValues={{\n            amount: '',\n            reason: '',\n            user_id: userId\n          }}\n          validationSchema={AddFundsSchema}\n          onSubmit={async (values, { setSubmitting }) => {\n            await dispatch(addFunds(values))\n            setSubmitting(false)\n            setFormModal(!formModal)\n          }}\n        >\n\n          {({ errors, touched, isSubmitting }) => (\n            <Form>\n              <ModalBody>\n                <FormGroup>\n                  <label htmlFor='amount'>Amount</label>\n                  <Field\n                    type='number'\n                    name='amount'\n                    placeholder='Amount'\n                    className={`form-control ${errors.amount && touched.amount && 'is-invalid'}`}\n                  />\n                  <ErrorMessage name='amount' component='div' className='field-error text-danger' />\n                </FormGroup>\n                <FormGroup>\n                  <label htmlFor='reason'>Reason</label>\n                  <Field\n                    type='text'\n                    name='reason'\n                    placeholder='Reason'\n                    className={`form-control ${errors.reason && touched.reason && 'is-invalid'}`}\n                  />\n                  <ErrorMessage name='reason' component='div' className='field-error text-danger' />\n                </FormGroup>\n              </ModalBody>\n              <ModalFooter>\n                <Button.Ripple color='primary' type='submit' disabled={isSubmitting}>\n                  {isSubmitting && <Spinner color='white' size='sm' />}\n                  <span className='ml-50'>Add Funds</span>\n                </Button.Ripple>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n    </div>\n  )\n}\n\nexport const DeductFunds = ({ userId, userData }) => {\n  const dispatch = useDispatch()\n  const [formModal, setFormModal] = useState(false)\n\n  return (\n    <div>\n      <Button.Ripple className='text-center mb-1' color='danger' outline block onClick={() => setFormModal(!formModal)}>\n        Deduct Funds\n      </Button.Ripple>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n        <ModalHeader toggle={() => setFormModal(!formModal)}>Deduct Funds</ModalHeader>\n        <Formik\n          initialValues={{\n            amount: '',\n            reason: '',\n            user_id: userId\n          }}\n          validationSchema={AddFundsSchema}\n          onSubmit={async (values, { setSubmitting }) => {\n            await dispatch(deductFunds(values))\n            setSubmitting(false)\n            setFormModal(!formModal)\n          }}\n        >\n\n          {({ errors, touched, isSubmitting }) => (\n            <Form>\n              <ModalBody>\n                <FormGroup>\n                  <label htmlFor='amount'>Amount</label>\n                  <Field\n                    type='number'\n                    name='amount'\n                    placeholder='Amount'\n                    className={`form-control ${errors.amount && touched.amount && 'is-invalid'}`}\n                  />\n                  <ErrorMessage name='amount' component='div' className='field-error text-danger' />\n                </FormGroup>\n                <FormGroup>\n                  <label htmlFor='reason'>Reason</label>\n                  <Field\n                    type='text'\n                    name='reason'\n                    placeholder='Reason'\n                    className={`form-control ${errors.reason && touched.reason && 'is-invalid'}`}\n                  />\n                  <ErrorMessage name='reason' component='div' className='field-error text-danger' />\n                </FormGroup>\n              </ModalBody>\n              <ModalFooter>\n                <Button.Ripple color='primary' type='submit' disabled={isSubmitting}>\n                  {isSubmitting && <Spinner color='white' size='sm' />}\n                  <span className='ml-50'>Deduct Funds</span>\n                </Button.Ripple>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n    </div>\n  )\n}","// ** Reactstrap\nimport { Card, CardHeader, CardBody, Badge, UncontrolledTooltip, Button } from 'reactstrap'\n\nimport { AddFunds, DeductFunds } from './AddFunds'\nimport { store } from '@store/storeConfig/store'\n\n\nconst PlanCard = ({ selectedUser, userData }) => {\n\n  return (\n    <Card className='plan-card border-primary'>\n      <CardHeader className='d-flex justify-content-between align-items-center pt-75 pb-1'>\n      </CardHeader>\n      <CardBody>\n        <AddFunds userId={selectedUser.user_id} userData={userData} />\n        <DeductFunds userId={selectedUser.user_id} userData={userData} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PlanCard\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Card, CardBody, CardText, Button, Row, Col } from 'reactstrap'\nimport { Pocket, DollarSign, TrendingUp, User, Check, Star, Flag, Phone } from 'react-feather'\nimport CardTitle from 'reactstrap/lib/CardTitle'\n\nconst UserInfoCard = ({ selectedUser, detail }) => {\n  // ** render user img\n  const renderUserImg = () => {\n    if (selectedUser !== null && selectedUser.avatar) {\n      return <img src={selectedUser.avatar} alt='user-avatar' className='img-fluid rounded' height='104' width='104' />\n    } else {\n      const stateNum = Math.floor(Math.random() * 6),\n        states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n        color = states[stateNum]\n      return (\n        <Avatar\n          initials\n          color={color}\n          className='rounded'\n          content={selectedUser.names}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(36px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '90px',\n            width: '90px'\n          }}\n        />\n      )\n    }\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <Row>\n          <Col xl='6' lg='12' className='d-flex flex-column justify-content-between border-container-lg'>\n            <div className='user-avatar-section'>\n              <div className='d-flex justify-content-start'>\n                {renderUserImg()}\n                <div className='d-flex flex-column ml-1'>\n                  <div className='user-info mt-2'>\n                    <h4 className='mb-0'>{selectedUser !== null ? selectedUser.names : 'Eleanor Aguilar'}</h4>\n                    <CardText tag='span'>\n                      {selectedUser !== null ? selectedUser.email : 'eleanor.aguilar@gmail.com'}\n                    </CardText>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='d-flex align-items-center user-total-numbers'>\n              <div className='d-flex align-items-center mr-2'>\n                <div className='color-box bg-light-primary'>\n                  <Pocket className='text-primary' />\n                </div>\n                <div className='ml-1'>\n                  <h5 className='mb-0'>{selectedUser.balance.toLocaleString('en-US', { style: 'currency', currency: 'NGN' })}</h5>\n                  <small>Naira Balance</small>\n                </div>\n              </div>\n              <div className='d-flex align-items-center'>\n                <div className='color-box bg-light-success'>\n                  <Pocket className='text-success' />\n                </div>\n                <div className='ml-1'>\n                  <h5 className='mb-0'>{selectedUser.appia_coins}</h5>\n                  <small>Appia Coin</small>\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-3 mr-5\">\n              <div className='d-flex flex-wrap justify-content-between align-items-center'>\n                <div className='user-info-title'>\n                  <User className='mr-1' size={14} />\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0'>\n                    User Id\n                  </CardText>\n                </div>\n                <CardText className='mb-0'>\n                  {selectedUser !== null ? selectedUser.user_id : 'eleanor.aguilar'}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap justify-content-between align-items-center my-50'>\n                <div className='user-info-title'>\n                  <Check className='mr-1' size={14} />\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0'>\n                    Status\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedUser !== null ? selectedUser.status || 'Active' : 'Active'}\n                </CardText>\n              </div>\n              <div className='d-flex flex-wrap justify-content-between align-items-center my-50'>\n                <div className='user-info-title'>\n                  <Phone className='mr-1' size={14} />\n                  <CardText tag='span' className='user-info-title font-weight-bold mb-0'>\n                    Phone No\n                  </CardText>\n                </div>\n                <CardText className='text-capitalize mb-0'>\n                  {selectedUser.phone}\n                </CardText>\n              </div>\n            </div>\n          </Col>\n          <Col xl='6' lg='12' className='mt-2 mt-xl-0'>\n            <div className='user-info-wrapper'>\n              {detail?.user_bank_details !== null ? <div className=\"mt-2\">\n                <div className='user-info-title'>\n                  <CardTitle> Bank Details: </CardTitle>\n                </div>\n                <div className='d-flex flex-wrap align-items-center mt-0'>\n                  <div className='user-info-title'>\n                    <User className='mr-1' size={14} />\n                    <CardText tag='span' className='user-info-title font-weight-bold mb-0'>\n                      Account Name\n                </CardText>\n                  </div>\n                  <CardText className='mb-0'>{detail?.user_bank_details?.account_name}</CardText>\n                </div>\n                <div className='d-flex flex-wrap align-items-center mt-1'>\n                  <div className='user-info-title'>\n                    <Flag className='mr-1' size={14} />\n                    <CardText tag='span' className='user-info-title font-weight-bold mb-0'>\n                      Account Number\n                </CardText>\n                  </div>\n                  <CardText className='mb-0'>{detail?.user_bank_details?.account_number}</CardText>\n                </div>\n                <div className='d-flex flex-wrap align-items-center mt-1'>\n                  <div className='user-info-title'>\n                    <Phone className='mr-1' size={14} />\n                    <CardText tag='span' className='user-info-title font-weight-bold mb-0'>\n                      Bank Name\n                </CardText>\n                  </div>\n                  <CardText className='mb-0'>{detail?.user_bank_details?.bank_name}</CardText>\n                </div>\n              </div> : \"\"}\n              <div className=\"mt-2\">\n                <div className='user-info-title'>\n                  <CardTitle> Providus Details: </CardTitle>\n                </div>\n                <div className='d-flex flex-wrap align-items-center mt-0'>\n                  <div className='user-info-title'>\n                    <User className='mr-1' size={14} />\n                    <CardText tag='span' className='user-info-title font-weight-bold mb-0'>\n                      Account Name\n                  </CardText>\n                  </div>\n                  <CardText className='mb-0'>{detail?.user_providus_details?.account_name}</CardText>\n                </div>\n                <div className='d-flex flex-wrap align-items-center mt-1'>\n                  <div className='user-info-title'>\n                    <Flag className='mr-1' size={14} />\n                    <CardText tag='span' className='user-info-title font-weight-bold mb-0'>\n                      Account Number\n                  </CardText>\n                  </div>\n                  <CardText className='mb-0'>{detail?.user_providus_details?.account_number}</CardText>\n                </div>\n                <div className='d-flex flex-wrap align-items-center mt-1'>\n                  <div className='user-info-title'>\n                    <Phone className='mr-1' size={14} />\n                    <CardText tag='span' className='user-info-title font-weight-bold mb-0'>\n                      Bank Name\n                  </CardText>\n                  </div>\n                  <CardText className='mb-0'>{detail?.user_providus_details?.bank_name}</CardText>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getUser, getUserAllTransactions } from '../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap\nimport { Row, Col, Alert, Button } from 'reactstrap'\n\n// ** User View Components\nimport PlanCard from './PlanCard'\nimport UserInfoCard from './UserInfoCard'\nimport { isUserLoggedIn, apiRequest, swal } from '@utils'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UserView = props => {\n  // ** Vars\n  const store = useSelector(state => state.appiaFunds),\n    dispatch = useDispatch(),\n    { id } = useParams()\n\n  const [userData, setUserData] = useState(null)\n  const [detail, setDetail] = useState(null)\n\n\n  // get users details\n  const userDetails = async (id) => {\n    const response = await apiRequest({ url: `/admin/users/details/${id}`, method: 'GET' }, dispatch)\n    if (response && response.data.success) {\n      await setDetail(response.data)\n    } else {\n      swal('Oops!', 'Something went wrong.', 'error')\n    }\n  }\n\n  // ** Get user on mount\n  useEffect(() => {\n    dispatch(getUser(store.allData, id))\n    userDetails(id)\n  }, [dispatch])\n\n\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n\n  return store.selectedUser !== null && store.selectedUser !== undefined ? (\n    <div className='app-user-view'>\n      <Row>\n        <Col xl='9' lg='8' md='7'>\n          <UserInfoCard selectedUser={store.selectedUser} detail={detail} />\n        </Col>\n        {/* {userData?.role_name === \" Control Admin\" ? */}\n        <Col xl='3' lg='4' md='5'>\n          <PlanCard selectedUser={store.selectedUser} userData={userData} />\n        </Col>\n        {/* // : \"\" } */}\n      </Row>\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Users not found</h4>\n      <div className='alert-body'>\n        Users with id: {id} doesn't exist. Check list of all Users: <Link to='/appia/user/list'>Users List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default UserView\n","import { paginateArray, sortCompare, apiRequest, swal } from '@utils'\n\nexport const apiUrl = process.env.REACT_APP_API_ENDPOINT\n\n// ** Get all User Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({url:'/admin/users', method:'GET'}, dispatch)\n    if (response && response.data.data && response.data.success) {\n        await dispatch({\n          type: 'GET_ALL_DATA',\n          data: response.data.data\n        })\n    } else {\n      console.log(response)\n      swal('Oops!', 'Something went wrong.', 'error')\n    }\n  }\n}\n\n// All Users Filtered Data\nexport const getFilteredData = (users, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, status = null } = params\n\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = users.filter(\n      user =>\n        (user.email.toLowerCase().includes(queryLowered) || user.names.toLowerCase().includes(queryLowered) || user.referral_code.toLowerCase().includes(queryLowered)) &&\n        user.status === (status || user.status)\n    )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_USER_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\n//  Get User\nexport const getUser = (users, id) => {\n  return async dispatch => {\n    const user = users.find(i => i.user_id === id)\n    dispatch({\n      type: 'GET_USER',\n      selectedUser: user\n    })\n  }\n}\n\n\n// Add Funds\nexport const addFunds = ({user_id, reason, amount}) => {\n  return async dispatch => {\n    const body = JSON.stringify({user_id, reason, amount})\n    const response = await apiRequest({url:`/admin/users/add`, method:'POST', body}, dispatch)\n    console.log({response})\n    if (response && response.data.success) {\n      swal('Good!', `Funds of ${amount} was successfully added and is pending aproval!.`, 'success')\n    } else {\n      console.log(response)\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n  }\n}\n\n// Deduct Funds\nexport const deductFunds = ({user_id, reason, amount}) => {\n  return async dispatch => {\n    const body = JSON.stringify({user_id, reason, amount})\n    const response = await apiRequest({url:`/admin/users/deduct`, method:'POST', body}, dispatch)\n    if (response && response.data.success) {\n      swal('Good!', `Funds of ${amount} was successfully deducted and is pending aproval!.`, 'success')\n    } else {\n      console.log(response)\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n  }\n}\n\n"],"sourceRoot":""}